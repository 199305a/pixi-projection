{"version":3,"file":"pixi-projection.umd.js","sources":["../src/base/AbstractProjection.ts","../src/constants.ts","../src/base/LinearProjection.ts","../src/base/webgl/Sprite2dRenderer.ts","../src/base/webgl/UniformBatchRenderer.ts","../src/curve/BaseSurface.ts","../src/curve/BilinearSurface.ts","../src/curve/ProjectionSurface.ts","../src/curve/Container2s.ts","../src/curve/sprites/Sprite2s.ts","../src/curve/sprites/Text2s.ts","../src/proj2d/Matrix2d.ts","../src/utils.ts","../src/proj2d/Projection2d.ts","../src/curve/sprites/convert.ts","../src/curve/SpriteBilinearRenderer.ts","../src/proj2d/Container2d.ts","../src/proj2d/mesh/Mesh2d.ts","../src/proj2d/sprites/Sprite2d.ts","../src/proj2d/sprites/Text2d.ts","../src/proj2d/tiling/TilingSprite2d.ts","../src/proj2d/z_masks/SpriteMaskFilter.ts","../src/proj2d/sprites/convert.ts","../src/proj2d/tiling/TilingSprite2dRenderer.ts","../src/proj2d/z_masks/MaskHacker.ts","../src/proj3d/Point3d.ts","../src/proj3d/Matrix3d.ts","../src/proj3d/Euler.ts","../src/proj3d/ObservableEuler.ts","../src/proj3d/Projection3d.ts","../src/proj3d/Container3d.ts","../src/proj3d/Camera3d.ts","../src/proj3d/mesh/Mesh3d2d.ts","../src/proj3d/sprites/Sprite3d.ts","../src/proj3d/sprites/Text3d.ts","../src/proj3d/sprites/convert.ts"],"sourcesContent":["import { Transform } from '@pixi/math';\n\nexport class ProjectedTransform extends Transform {\n\tproj: AbstractProjection;\n}\n\nexport class AbstractProjection {\n\tlegacy: ProjectedTransform;\n\n\tprotected _enabled: boolean = false;\n\n\tconstructor(legacy: Transform, enable: boolean = true) {\n\t\tthis.legacy = legacy as ProjectedTransform;\n\n\t\tif (enable) {\n\t\t\tthis.enabled = true;\n\t\t}\n\n\t\t// sorry for hidden class, it would be good to have special projection field in official pixi\n\t\tthis.legacy.proj = this;\n\t}\n\n\tget enabled() {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(value: boolean) {\n\t\tthis._enabled = value;\n\t}\n\n\tclear() {\n\t}\n}","export enum AFFINE {\n\tNONE = 0,\n\tFREE = 1,\n\tAXIS_X = 2,\n\tAXIS_Y = 3,\n\tPOINT = 4,\n\tAXIS_XR = 5\n}\n\nexport enum TRANSFORM_STEP {\n\tNONE = 0,\n\t// POS = 1,\n\t// ROT = 2,\n\t// SCALE = 3,\n\t// PIVOT = 4,\n\tBEFORE_PROJ = 4,\n\tPROJ = 5,\n\t// POS_2 = 6,\n\t// ROT_2 = 7,\n\t// SCALE_2 = 8,\n\t// PIVOT_2 = 9,\n\tALL = 9\n}","/// <reference path=\"../types.d.ts\" />\n\nimport { AFFINE } from '../constants';\nimport { AbstractProjection } from './AbstractProjection';\nimport { Transform } from '@pixi/math';\n\nimport type { Matrix } from '@pixi/math';\nimport type { ProjectedTransform } from './AbstractProjection';\nimport type { Projection2d } from '../proj2d/Projection2d';\n\nfunction transformHack(this: ProjectedTransform, parentTransform: ProjectedTransform) {\n\t// implementation here\n\tconst proj = this.proj as LinearProjection<any>;\n\tconst ta = this as any;\n\tconst pwid = (parentTransform as any)._worldID;\n\n\tconst lt = ta.localTransform;\n\tconst scaleAfterAffine = proj.scaleAfterAffine && proj.affine >= 2;\n\n\t//this part is copied from\n\tif (ta._localID !== ta._currentLocalID) {\n\t\t// get the matrix values of the displayobject based on its transform properties..\n\t\tif (scaleAfterAffine) {\n\t\t\tlt.a = ta._cx;\n\t\t\tlt.b = ta._sx;\n\t\t\tlt.c = ta._cy;\n\t\t\tlt.d = ta._sy;\n\n\t\t\tlt.tx = ta.position._x;\n\t\t\tlt.ty = ta.position._y;\n\t\t} else {\n\t\t\tlt.a = ta._cx * ta.scale._x;\n\t\t\tlt.b = ta._sx * ta.scale._x;\n\t\t\tlt.c = ta._cy * ta.scale._y;\n\t\t\tlt.d = ta._sy * ta.scale._y;\n\n\t\t\tlt.tx = ta.position._x - ((ta.pivot._x * lt.a) + (ta.pivot._y * lt.c));\n\t\t\tlt.ty = ta.position._y - ((ta.pivot._x * lt.b) + (ta.pivot._y * lt.d));\n\t\t}\n\n\t\tta._currentLocalID = ta._localID;\n\n\t\t// force an update..\n\t\tproj._currentProjID = -1;\n\t}\n\n\tconst _matrixID = proj._projID;\n\tif (proj._currentProjID !== _matrixID) {\n\t\tproj._currentProjID = _matrixID;\n\t\tproj.updateLocalTransform(lt);\n\t\tta._parentID = -1;\n\t}\n\n\tif (ta._parentID !== pwid) {\n\t\tconst pp = parentTransform.proj as Projection2d;\n\t\tif (pp && !pp._affine) {\n\t\t\tproj.world.setToMult(pp.world, proj.local);\n\t\t} else {\n\t\t\tproj.world.setToMultLegacy(parentTransform.worldTransform, proj.local);\n\t\t}\n\n\t\tlet wa = ta.worldTransform;\n\n\t\tproj.world.copyTo(wa, proj._affine, proj.affinePreserveOrientation);\n\n\t\tif (scaleAfterAffine) {\n\t\t\twa.a *= ta.scale._x;\n\t\t\twa.b *= ta.scale._x;\n\t\t\twa.c *= ta.scale._y;\n\t\t\twa.d *= ta.scale._y;\n\n\t\t\twa.tx -= ((ta.pivot._x * wa.a) + (ta.pivot._y * wa.c));\n\t\t\twa.ty -= ((ta.pivot._x * wa.b) + (ta.pivot._y * wa.d));\n\t\t}\n\t\tta._parentID = pwid;\n\t\tta._worldID++;\n\t}\n}\n\nexport class LinearProjection<T> extends AbstractProjection { \n\t_projID = 0;\n\t_currentProjID = -1;\n\t_affine = AFFINE.NONE;\n\taffinePreserveOrientation = false;\n\tscaleAfterAffine = true;\n\n\tupdateLocalTransform(lt: Matrix) {\n\n\t}\n\n\tset affine(value: AFFINE) {\n\t\tif (this._affine == value) return;\n\t\tthis._affine = value;\n\t\tthis._currentProjID = -1;\n\t\t// this is because scaleAfterAffine\n\t\t(this.legacy as any)._currentLocalID = -1;\n\t}\n\n\tget affine() {\n\t\treturn this._affine;\n\t}\n\n\tlocal: T;\n\tworld: T;\n\n\tset enabled(value: boolean) {\n\t\tif (value === this._enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._enabled = value;\n\t\tif (value) {\n\t\t\tthis.legacy.updateTransform = transformHack;\n\t\t\t(this.legacy as any)._parentID = -1;\n\t\t} else {\n\t\t\tthis.legacy.updateTransform = Transform.prototype.updateTransform;\n\t\t\t(this.legacy as any)._parentID = -1;\n\t\t}\n\t}\n\n\tclear() {\n\t\tthis._currentProjID = -1;\n\t\tthis._projID = 0;\n\t}\n}","/// <reference path=\"../../types.d.ts\" />\n\nimport { \n\tAbstractBatchRenderer, \n\tBatchShaderGenerator,\n\tBuffer, \n\tGeometry, \n\tRenderer, \n\tViewableBuffer \n} from '@pixi/core';\nimport { TYPES } from '@pixi/constants';\nimport { premultiplyTint } from '@pixi/utils';\nimport shaderVert from './sprite2d.vert';\nimport shaderFrag from './sprite2d.frag';\n\nexport class Batch3dGeometry extends Geometry\n{\n\t_buffer: Buffer;\n\t_indexBuffer : Buffer;\n\n\tconstructor(_static = false)\n\t{\n\t\tsuper();\n\n\t\tthis._buffer = new Buffer(null, _static, false);\n\n\t\tthis._indexBuffer = new Buffer(null, _static, true);\n\n\t\tthis.addAttribute('aVertexPosition', this._buffer, 3, false, TYPES.FLOAT)\n\t\t\t.addAttribute('aTextureCoord', this._buffer, 2, false, TYPES.FLOAT)\n\t\t\t.addAttribute('aColor', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\n\t\t\t.addAttribute('aTextureId', this._buffer, 1, true, TYPES.FLOAT)\n\t\t\t.addIndex(this._indexBuffer);\n\t}\n}\n\nexport class Batch2dPluginFactory {\n\tstatic create(options: any): any\n\t{\n\t\tconst { vertex, fragment, vertexSize, geometryClass } = (Object as any).assign({\n\t\t\tvertex: shaderVert,\n\t\t\tfragment: shaderFrag,\n\t\t\tgeometryClass: Batch3dGeometry,\n\t\t\tvertexSize: 7,\n\t\t}, options);\n\n\t\treturn class BatchPlugin extends AbstractBatchRenderer\n\t\t{\n\t\t\tconstructor(renderer: Renderer)\n\t\t\t{\n\t\t\t\tsuper(renderer);\n\n\t\t\t\tthis.shaderGenerator = new BatchShaderGenerator(vertex, fragment);\n\t\t\t\tthis.geometryClass = geometryClass;\n\t\t\t\tthis.vertexSize = vertexSize;\n\t\t\t}\n\n\t\t\tvertexSize: number;\n\n\t\t\tpackInterleavedGeometry(element: any, attributeBuffer: ViewableBuffer, indexBuffer: Uint16Array, aIndex: number, iIndex: number)\n\t\t\t{\n\t\t\t\tconst {\n\t\t\t\t\tuint32View,\n\t\t\t\t\tfloat32View,\n\t\t\t\t} = attributeBuffer;\n\n\t\t\t\tconst p = aIndex / this.vertexSize;// float32View.length / 6 / 2;\n\t\t\t\tconst uvs = element.uvs;\n\t\t\t\tconst indices = element.indices;// geometry.getIndex().data;// indicies;\n\t\t\t\tconst vertexData = element.vertexData;\n\t\t\t\tconst vertexData2d = element.vertexData2d;\n\t\t\t\tconst textureId = element._texture.baseTexture._batchLocation;\n\n\t\t\t\tconst alpha = Math.min(element.worldAlpha, 1.0);\n\n\t\t\t\tconst argb = alpha < 1.0 && element._texture.baseTexture.alphaMode ? premultiplyTint(element._tintRGB, alpha)\n\t\t\t\t\t: element._tintRGB + (alpha * 255 << 24);\n\n\t\t\t\tif (vertexData2d) {\n\t\t\t\t\tlet j = 0;\n\t\t\t\t\tfor (let i = 0; i < vertexData2d.length; i += 3, j += 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat32View[aIndex++] = vertexData2d[i];\n\t\t\t\t\t\tfloat32View[aIndex++] = vertexData2d[i + 1];\n\t\t\t\t\t\tfloat32View[aIndex++] = vertexData2d[i + 2];\n\t\t\t\t\t\tfloat32View[aIndex++] = uvs[j];\n\t\t\t\t\t\tfloat32View[aIndex++] = uvs[j + 1];\n\t\t\t\t\t\tuint32View[aIndex++] = argb;\n\t\t\t\t\t\tfloat32View[aIndex++] = textureId;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = 0; i < vertexData.length; i += 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat32View[aIndex++] = vertexData[i];\n\t\t\t\t\t\tfloat32View[aIndex++] = vertexData[i + 1];\n\t\t\t\t\t\tfloat32View[aIndex++] = 1.0;\n\t\t\t\t\t\tfloat32View[aIndex++] = uvs[i];\n\t\t\t\t\t\tfloat32View[aIndex++] = uvs[i + 1];\n\t\t\t\t\t\tuint32View[aIndex++] = argb;\n\t\t\t\t\t\tfloat32View[aIndex++] = textureId;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < indices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tindexBuffer[iIndex++] = p + indices[i];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n\nRenderer.registerPlugin('batch2d', Batch2dPluginFactory.create({}));\n","/// <reference path=\"../../types.d.ts\" />\n\nimport { AbstractBatchRenderer, BatchTextureArray, ViewableBuffer } from '@pixi/core';\nimport { Sprite } from '@pixi/sprite';\nimport { premultiplyBlendMode } from '@pixi/utils';\n\nexport class UniformBatchRenderer extends AbstractBatchRenderer {\n\t_iIndex: number;\n\t_aIndex: number;\n\t_dcIndex: number;\n\t_bufferedElements: Array<any>;\n\t_attributeBuffer: ViewableBuffer;\n\t_indexBuffer: Uint16Array;\n\tvertexSize: number;\n\tforceMaxTextures = 0;\n\n\tgetUniforms(sprite: Sprite): any {\n\t\treturn this.defUniforms;\n\t}\n\n\tsyncUniforms(obj: any) {\n\t\tif (!obj) return;\n\t\tlet sh = this._shader;\n\t\tfor (let key in obj) {\n\t\t\tsh.uniforms[key] = obj[key];\n\t\t}\n\t}\n\n\tdefUniforms = {};\n\n\tbuildDrawCalls(texArray: BatchTextureArray, start: number, finish: number)\n\t{\n\t\tconst thisAny = this as any;\n\n\t\tconst {\n\t\t\t_bufferedElements: elements,\n\t\t\t_attributeBuffer,\n\t\t\t_indexBuffer,\n\t\t\tvertexSize,\n\t\t} = this;\n\t\tconst drawCalls = AbstractBatchRenderer._drawCallPool;\n\n\t\tlet dcIndex: number = this._dcIndex;\n\t\tlet aIndex: number = this._aIndex;\n\t\tlet iIndex: number = this._iIndex;\n\n\t\tlet drawCall = drawCalls[dcIndex] as any;\n\n\t\tdrawCall.start = this._iIndex;\n\t\tdrawCall.texArray = texArray;\n\n\t\tfor (let i = start; i < finish; ++i)\n\t\t{\n\t\t\tconst sprite = elements[i];\n\t\t\tconst tex = sprite._texture.baseTexture;\n\t\t\tconst spriteBlendMode = premultiplyBlendMode[\n\t\t\t\ttex.alphaMode ? 1 : 0][sprite.blendMode];\n\t\t\tconst uniforms = this.getUniforms(sprite);\n\n\t\t\telements[i] = null;\n\n\t\t\t// here is the difference\n\t\t\tif (start < i && (drawCall.blend !== spriteBlendMode || drawCall.uniforms !== uniforms))\n\t\t\t{\n\t\t\t\tdrawCall.size = iIndex - drawCall.start;\n\t\t\t\tstart = i;\n\t\t\t\tdrawCall = drawCalls[++dcIndex];\n\t\t\t\tdrawCall.texArray = texArray;\n\t\t\t\tdrawCall.start = iIndex;\n\t\t\t}\n\n\t\t\tthis.packInterleavedGeometry(sprite, _attributeBuffer, _indexBuffer, aIndex, iIndex);\n\t\t\taIndex += sprite.vertexData.length / 2 * vertexSize;\n\t\t\tiIndex += sprite.indices.length;\n\n\t\t\tdrawCall.blend = spriteBlendMode;\n\t\t\t// here is the difference\n\t\t\tdrawCall.uniforms = uniforms;\n\t\t}\n\n\t\tif (start < finish)\n\t\t{\n\t\t\tdrawCall.size = iIndex - drawCall.start;\n\t\t\t++dcIndex;\n\t\t}\n\n\t\tthisAny._dcIndex = dcIndex;\n\t\tthisAny._aIndex = aIndex;\n\t\tthisAny._iIndex = iIndex;\n\t}\n\n\tdrawBatches() {\n\t\tconst dcCount = this._dcIndex;\n\t\tconst {gl, state: stateSystem, shader: shaderSystem} = this.renderer;\n\t\tconst drawCalls = AbstractBatchRenderer._drawCallPool;\n\t\tlet curUniforms: any = null;\n\t\tlet curTexArray: BatchTextureArray = null;\n\n\t\tfor (let i = 0; i < dcCount; i++) {\n\t\t\tconst {texArray, type, size, start, blend, uniforms} = drawCalls[i] as any;\n\n\t\t\tif (curTexArray !== texArray) {\n\t\t\t\tcurTexArray = texArray;\n\t\t\t\tthis.bindAndClearTexArray(texArray);\n\t\t\t}\n\t\t\t// here is the difference\n\t\t\tif (curUniforms !== uniforms) {\n\t\t\t\tcurUniforms = uniforms;\n\t\t\t\tthis.syncUniforms(uniforms);\n\t\t\t\t(shaderSystem as any).syncUniformGroup((this._shader as any).uniformGroup);\n\t\t\t}\n\n\t\t\tthis.state.blendMode = blend;\n\t\t\tstateSystem.set(this.state);\n\t\t\tgl.drawElements(type, size, gl.UNSIGNED_SHORT, start * 2);\n\t\t}\n\t}\n\n\tcontextChange()\n\t{\n\t\tif (!this.forceMaxTextures) {\n\t\t\tsuper.contextChange();\n\t\t\tthis.syncUniforms(this.defUniforms);\n\t\t\treturn;\n\t\t}\n\n\t\t// we can override MAX_TEXTURES with this hack\n\n\t\tconst gl = this.renderer.gl;\n\t\tconst thisAny = this as any;\n\n\t\tthisAny.MAX_TEXTURES = this.forceMaxTextures;\n\t\tthis._shader = thisAny.shaderGenerator.generateShader(this.MAX_TEXTURES);\n\t\tthis.syncUniforms(this.defUniforms);\n\t\tfor (let i = 0; i < thisAny._packedGeometryPoolSize; i++)\n\t\t{\n\t\t\t/* eslint-disable max-len */\n\t\t\tthisAny._packedGeometries[i] = new (this.geometryClass)();\n\t\t}\n\t\tthis.initFlushBuffers();\n\t}\n}\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Matrix, Point } from '@pixi/math';\n\nimport type { IPoint } from '@pixi/math';\nimport type { IWorldTransform } from './ProjectionSurface';\n\nconst p = [new Point(), new Point(), new Point(), new Point()];\nconst a = [0, 0, 0, 0];\n\nexport abstract class Surface implements IWorldTransform {\n\tsurfaceID = \"default\";\n\n\t_updateID: number = 0;\n\n\tvertexSrc: string = \"\";\n\tfragmentSrc: string = \"\";\n\n\tfillUniforms(uniforms: any) {\n\n\t}\n\n\tclear() {\n\n\t}\n\n\t/**\n\t * made for bilinear, other things will need adjustments, like test if (0) is inside\n\t * @param {ArrayLike<number>} v\n\t * @param out\n\t * @param {Matrix} after\n\t */\n\tboundsQuad(v: ArrayLike<number>, out: any, after?: Matrix) {\n\t\tlet minX = out[0], minY = out[1];\n\t\tlet maxX = out[0], maxY = out[1];\n\t\tfor (let i = 2; i < 8; i += 2) {\n\t\t\tif (minX > out[i]) minX = out[i];\n\t\t\tif (maxX < out[i]) maxX = out[i];\n\t\t\tif (minY > out[i + 1]) minY = out[i + 1];\n\t\t\tif (maxY < out[i + 1]) maxY = out[i + 1];\n\t\t}\n\n\t\tp[0].set(minX, minY);\n\t\tthis.apply(p[0], p[0]);\n\t\tp[1].set(maxX, minY);\n\t\tthis.apply(p[1], p[1]);\n\t\tp[2].set(maxX, maxY);\n\t\tthis.apply(p[2], p[2]);\n\t\tp[3].set(minX, maxY);\n\t\tthis.apply(p[3], p[3]);\n\n\t\tif (after) {\n\t\t\tafter.apply(p[0], p[0]);\n\t\t\tafter.apply(p[1], p[1]);\n\t\t\tafter.apply(p[2], p[2]);\n\t\t\tafter.apply(p[3], p[3]);\n\t\t\tout[0] = p[0].x;\n\t\t\tout[1] = p[0].y;\n\t\t\tout[2] = p[1].x;\n\t\t\tout[3] = p[1].y;\n\t\t\tout[4] = p[2].x;\n\t\t\tout[5] = p[2].y;\n\t\t\tout[6] = p[3].x;\n\t\t\tout[7] = p[3].y;\n\t\t} else {\n\t\t\tfor (let i = 1; i <= 3; i++) {\n\t\t\t\tif (p[i].y < p[0].y || p[i].y == p[0].y && p[i].x < p[0].x) {\n\t\t\t\t\tlet t = p[0];\n\t\t\t\t\tp[0] = p[i];\n\t\t\t\t\tp[i] = t;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 1; i <= 3; i++) {\n\t\t\t\ta[i] = Math.atan2(p[i].y - p[0].y, p[i].x - p[0].x);\n\t\t\t}\n\t\t\tfor (let i = 1; i <= 3; i++) {\n\t\t\t\tfor (let j = i + 1; j <= 3; j++) {\n\t\t\t\t\tif (a[i] > a[j]) {\n\t\t\t\t\t\tlet t = p[i];\n\t\t\t\t\t\tp[i] = p[j];\n\t\t\t\t\t\tp[j] = t;\n\t\t\t\t\t\tlet t2 = a[i];\n\t\t\t\t\t\ta[i] = a[j];\n\t\t\t\t\t\ta[j] = t2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout[0] = p[0].x;\n\t\t\tout[1] = p[0].y;\n\t\t\tout[2] = p[1].x;\n\t\t\tout[3] = p[1].y;\n\t\t\tout[4] = p[2].x;\n\t\t\tout[5] = p[2].y;\n\t\t\tout[6] = p[3].x;\n\t\t\tout[7] = p[3].y;\n\n\t\t\tif ((p[3].x - p[2].x) * (p[1].y - p[2].y) - (p[1].x - p[2].x) * (p[3].y - p[2].y) < 0) {\n\t\t\t\t//triangle!!!\n\t\t\t\tout[4] = p[3].x;\n\t\t\t\tout[5] = p[3].y;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tabstract apply(pos: IPoint, newPos: IPoint): IPoint;\n\n\t//TODO: remove props\n\tabstract applyInverse(pos: IPoint, newPos: IPoint): IPoint;\n}\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Matrix, Point, Rectangle, Transform } from '@pixi/math';\nimport { Surface } from './BaseSurface';\nimport { Sprite } from '@pixi/sprite';\n\nimport type { IPoint } from '@pixi/math';\n\nconst tempMat = new Matrix();\nconst tempRect = new Rectangle();\nconst tempPoint = new Point();\n\nexport class BilinearSurface extends Surface {\n\tdistortion = new Point();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tclear() {\n\t\tthis.distortion.set(0, 0);\n\t}\n\n\tapply(pos: IPoint, newPos?: IPoint): IPoint {\n\t\tnewPos = newPos || new Point();\n\t\tconst d = this.distortion;\n\t\tconst m = pos.x * pos.y;\n\t\tnewPos.x = pos.x + d.x * m;\n\t\tnewPos.y = pos.y + d.y * m;\n\t\treturn newPos;\n\t}\n\n\tapplyInverse(pos: IPoint, newPos: IPoint): IPoint {\n\t\tnewPos = newPos || new Point();\n\t\tconst vx = pos.x, vy = pos.y;\n\t\tconst dx = this.distortion.x, dy = this.distortion.y;\n\n\t\tif (dx == 0.0) {\n\t\t\tnewPos.x = vx;\n\t\t\tnewPos.y = vy / (1.0 + dy * vx);\n\t\t} else\n\t\tif (dy == 0.0) {\n\t\t\tnewPos.y = vy;\n\t\t\tnewPos.x = vx/ (1.0 + dx * vy);\n\t\t} else {\n\t\t\tconst b = (vy * dx - vx * dy + 1.0) * 0.5 / dy;\n\t\t\tconst d = b * b + vx / dy;\n\n\t\t\tif (d <= 0.00001) {\n\t\t\t\tnewPos.set(NaN, NaN);\n\t\t\t\treturn newPos;\n\t\t\t}\n\t\t\tif (dy > 0.0) {\n\t\t\t\tnewPos.x = - b + Math.sqrt(d);\n\t\t\t} else {\n\t\t\t\tnewPos.x = - b - Math.sqrt(d);\n\t\t\t}\n\t\t\tnewPos.y = (vx / newPos.x - 1.0) / dx;\n\t\t}\n\t\treturn newPos;\n\t}\n\n\tmapSprite(sprite: Sprite, quad: Array<IPoint>, outTransform?: Transform) {\n\t\tconst tex = sprite.texture;\n\n\t\ttempRect.x = -sprite.anchor.x * tex.orig.width;\n\t\ttempRect.y = -sprite.anchor.y * tex.orig.height;\n\t\ttempRect.width = tex.orig.width;\n\t\ttempRect.height = tex.orig.height;\n\n\t\treturn this.mapQuad(tempRect, quad, outTransform || sprite.transform as Transform);\n\t}\n\n\tmapQuad(rect: Rectangle, quad: Array<IPoint>, outTransform: Transform) {\n\t\tconst ax = -rect.x / rect.width;\n\t\tconst ay = -rect.y / rect.height;\n\n\t\tconst ax2 = (1.0 - rect.x) / rect.width;\n\t\tconst ay2 = (1.0 - rect.y) / rect.height;\n\n\t\tconst up1x = (quad[0].x * (1.0 - ax) + quad[1].x * ax);\n\t\tconst up1y = (quad[0].y * (1.0 - ax) + quad[1].y * ax);\n\t\tconst up2x = (quad[0].x * (1.0 - ax2) + quad[1].x * ax2);\n\t\tconst up2y = (quad[0].y * (1.0 - ax2) + quad[1].y * ax2);\n\n\t\tconst down1x = (quad[3].x * (1.0 - ax) + quad[2].x * ax);\n\t\tconst down1y = (quad[3].y * (1.0 - ax) + quad[2].y * ax);\n\t\tconst down2x = (quad[3].x * (1.0 - ax2) + quad[2].x * ax2);\n\t\tconst down2y = (quad[3].y * (1.0 - ax2) + quad[2].y * ax2);\n\n\t\tconst x00 = up1x * (1.0 - ay) + down1x * ay;\n\t\tconst y00 = up1y * (1.0 - ay) + down1y * ay;\n\n\t\tconst x10 = up2x * (1.0 - ay) + down2x * ay;\n\t\tconst y10 = up2y * (1.0 - ay) + down2y * ay;\n\n\t\tconst x01 = up1x * (1.0 - ay2) + down1x * ay2;\n\t\tconst y01 = up1y * (1.0 - ay2) + down1y * ay2;\n\n\t\tconst x11 = up2x * (1.0 - ay2) + down2x * ay2;\n\t\tconst y11 = up2y * (1.0 - ay2) + down2y * ay2;\n\n\t\tconst mat = tempMat;\n\t\tmat.tx = x00;\n\t\tmat.ty = y00;\n\t\tmat.a = x10 - x00;\n\t\tmat.b = y10 - y00;\n\t\tmat.c = x01 - x00;\n\t\tmat.d = y01 - y00;\n\t\ttempPoint.set(x11, y11);\n\t\tmat.applyInverse(tempPoint, tempPoint);\n\t\tthis.distortion.set(tempPoint.x - 1, tempPoint.y - 1);\n\n\t\toutTransform.setFromMatrix(mat);\n\n\t\treturn this;\n\t}\n\n\tfillUniforms(uniforms: any) {\n\t\tuniforms.distortion = uniforms.distortion || new Float32Array([0, 0, 0, 0]);\n\t\tconst ax = Math.abs(this.distortion.x);\n\t\tconst ay = Math.abs(this.distortion.y);\n\n\t\tuniforms.distortion[0] = ax * 10000 <= ay ? 0 : this.distortion.x;\n\t\tuniforms.distortion[1] = ay * 10000 <= ax ? 0 : this.distortion.y;\n\t\tuniforms.distortion[2] = 1.0 / uniforms.distortion[0];\n\t\tuniforms.distortion[3] = 1.0 / uniforms.distortion[1];\n\t}\n}\n","/// <reference path=\"../types.d.ts\" />\n\nimport { AbstractProjection } from '../base/AbstractProjection';\nimport { BilinearSurface } from './BilinearSurface';\nimport { Sprite } from '@pixi/sprite';\nimport { Surface } from './BaseSurface';\nimport { Transform } from '@pixi/math';\n\nimport type { IPoint } from '@pixi/math';\nimport type { ProjectedTransform } from '../base/AbstractProjection';\n\nconst fun = Transform.prototype.updateTransform;\n\nexport interface IWorldTransform {\n\tapply(pos: IPoint, newPos: IPoint): IPoint;\n\n\t//TODO: remove props\n\tapplyInverse(pos: IPoint, newPos: IPoint): IPoint;\n}\n\nfunction transformHack(this: ProjectedTransform, parentTransform: ProjectedTransform): IWorldTransform {\n\tconst proj = this.proj as ProjectionSurface;\n\n\tconst pp = parentTransform.proj as ProjectionSurface;\n\tconst ta = this as any;\n\n\tif (!pp) {\n\t\tfun.call(this, parentTransform);\n\t\tproj._activeProjection = null;\n\t\treturn;\n\t}\n\n\tif (pp._surface) {\n\t\tproj._activeProjection = pp;\n\t\tthis.updateLocalTransform();\n\t\tthis.localTransform.copyTo(this.worldTransform);\n\t\tif (ta._parentID < 0) {\n\t\t\t++ta._worldID;\n\t\t}\n\t\treturn;\n\t}\n\n\tfun.call(this, parentTransform);\n\tproj._activeProjection = pp._activeProjection;\n}\n\nexport class ProjectionSurface extends AbstractProjection {\n\tconstructor(legacy: Transform, enable?: boolean) {\n\t\tsuper(legacy, enable);\n\t}\n\n\t_surface: Surface = null;\n\t_activeProjection: ProjectionSurface = null;\n\n\tset enabled(value: boolean) {\n\t\tif (value === this._enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._enabled = value;\n\t\tif (value) {\n\t\t\tthis.legacy.updateTransform = transformHack;\n\t\t\t(this.legacy as any)._parentID = -1;\n\t\t} else {\n\t\t\tthis.legacy.updateTransform = Transform.prototype.updateTransform;\n\t\t\t(this.legacy as any)._parentID = -1;\n\t\t}\n\t}\n\n\tget surface() {\n\t\treturn this._surface;\n\t}\n\n\tset surface(value: Surface) {\n\t\tif (this._surface == value) {\n\t\t\treturn;\n\t\t}\n\t\tthis._surface = value || null;\n\t\t(this.legacy as any)._parentID = -1;\n\t}\n\n\tapplyPartial(pos: IPoint, newPos?: IPoint): IPoint {\n\t\tif (this._activeProjection !== null) {\n\t\t\tnewPos = this.legacy.worldTransform.apply(pos as any, newPos as any);\n\t\t\treturn this._activeProjection.surface.apply(newPos, newPos);\n\t\t}\n\t\tif (this._surface !== null) {\n\t\t\treturn this.surface.apply(pos, newPos);\n\t\t}\n\t\treturn this.legacy.worldTransform.apply(pos as any, newPos as any);\n\t}\n\n\tapply(pos: IPoint, newPos?: IPoint): IPoint {\n\t\tif (this._activeProjection !== null) {\n\t\t\tnewPos = this.legacy.worldTransform.apply(pos as any, newPos as any);\n\t\t\tthis._activeProjection.surface.apply(newPos, newPos);\n\t\t\treturn this._activeProjection.legacy.worldTransform.apply(newPos as any, newPos as any);\n\t\t}\n\t\tif (this._surface !== null) {\n\t\t\tnewPos = this.surface.apply(pos, newPos);\n\t\t\treturn this.legacy.worldTransform.apply(newPos as any, newPos as any);\n\t\t}\n\t\treturn this.legacy.worldTransform.apply(pos as any, newPos as any);\n\t}\n\n\tapplyInverse(pos: IPoint, newPos: IPoint) {\n\t\tif (this._activeProjection !== null) {\n\t\t\tnewPos = this._activeProjection.legacy.worldTransform.applyInverse(pos as any, newPos as any);\n\t\t\tthis._activeProjection._surface.applyInverse(newPos, newPos);\n\t\t\treturn this.legacy.worldTransform.applyInverse(newPos as any, newPos as any);\n\t\t}\n\t\tif (this._surface !== null) {\n\t\t\tnewPos = this.legacy.worldTransform.applyInverse(pos as any, newPos as any);\n\t\t\treturn this._surface.applyInverse(newPos, newPos);\n\t\t}\n\t\treturn this.legacy.worldTransform.applyInverse(pos as any, newPos as any);\n\t}\n\n\tmapBilinearSprite(sprite: Sprite, quad: Array<IPoint>) {\n\t\tif (!(this._surface instanceof BilinearSurface)) {\n\t\t\tthis.surface = new BilinearSurface();\n\t\t}\n\t\t(this.surface as BilinearSurface).mapSprite(sprite, quad, this.legacy);\n\t}\n\n\t_currentSurfaceID = -1;\n\t_currentLegacyID = -1;\n\t_lastUniforms : any = null;\n\n\tclear() {\n\t\tif (this.surface) {\n\t\t\tthis.surface.clear();\n\t\t}\n\t}\n\n\tget uniforms(): any {\n\t\tif (this._currentLegacyID === (this.legacy as any)._worldID &&\n\t\t\tthis._currentSurfaceID === this.surface._updateID) {\n\n\t\t\treturn this._lastUniforms;\n\t\t}\n\n\t\tthis._lastUniforms = this._lastUniforms || {};\n\t\tthis._lastUniforms.translationMatrix = this.legacy.worldTransform;\n\t\tthis._surface.fillUniforms(this._lastUniforms);\n\t\treturn this._lastUniforms;\n\t}\n}\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Container } from '@pixi/display';\nimport { ProjectionSurface } from './ProjectionSurface';\n\nexport class Container2s extends Container {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.proj = new ProjectionSurface(this.transform);\n\t}\n\n\tproj: ProjectionSurface;\n\n\tget worldTransform() {\n\t\treturn this.proj as any;\n\t}\n}\n","/// <reference path=\"../../types.d.ts\" />\n\nimport { Matrix } from '@pixi/math';\nimport { ProjectionSurface } from '../ProjectionSurface';\nimport { Sprite } from '@pixi/sprite';\nimport { Texture, TextureMatrix } from '@pixi/core';\n\nexport class Sprite2s extends Sprite {\n\tconstructor(texture: Texture) {\n\t\tsuper(texture);\n\t\tthis.proj = new ProjectionSurface(this.transform);\n\t\tthis.pluginName = 'batch_bilinear';\n\t}\n\n\tproj: ProjectionSurface;\n\taTrans = new Matrix();\n\n\t_calculateBounds() {\n\t\tthis.calculateTrimmedVertices();\n\t\tthis._bounds.addQuad(this.vertexTrimmedData as any);\n\t}\n\n\tcalculateVertices() {\n\t\tconst wid = (this.transform as any)._worldID;\n\t\tconst tuid = (this._texture as any)._updateID;\n\t\tif (this._transformID === wid && this._textureID === tuid) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._transformID = wid;\n\t\tthis._textureID = tuid;\n\n\t\tconst texture = this._texture;\n\t\tconst vertexData = this.vertexData;\n\t\tconst trim = texture.trim;\n\t\tconst orig = texture.orig;\n\t\tconst anchor = (this._anchor as any) as { _x: number, _y: number};\n\n\t\tlet w0 = 0;\n\t\tlet w1 = 0;\n\t\tlet h0 = 0;\n\t\tlet h1 = 0;\n\n\t\tif (trim) {\n\t\t\tw1 = trim.x - (anchor._x * orig.width);\n\t\t\tw0 = w1 + trim.width;\n\n\t\t\th1 = trim.y - (anchor._y * orig.height);\n\t\t\th0 = h1 + trim.height;\n\t\t}\n\t\telse {\n\t\t\tw1 = -anchor._x * orig.width;\n\t\t\tw0 = w1 + orig.width;\n\n\t\t\th1 = -anchor._y * orig.height;\n\t\t\th0 = h1 + orig.height;\n\t\t}\n\n\t\tif (this.proj._surface) {\n\t\t\tvertexData[0] = w1;\n\t\t\tvertexData[1] = h1;\n\t\t\tvertexData[2] = w0;\n\t\t\tvertexData[3] = h1;\n\t\t\tvertexData[4] = w0;\n\t\t\tvertexData[5] = h0;\n\t\t\tvertexData[6] = w1;\n\t\t\tvertexData[7] = h0;\n\t\t\tthis.proj._surface.boundsQuad(vertexData, vertexData);\n\t\t} else {\n\t\t\tconst wt = this.transform.worldTransform;\n\t\t\tconst a = wt.a;\n\t\t\tconst b = wt.b;\n\t\t\tconst c = wt.c;\n\t\t\tconst d = wt.d;\n\t\t\tconst tx = wt.tx;\n\t\t\tconst ty = wt.ty;\n\t\t\tvertexData[0] = (a * w1) + (c * h1) + tx;\n\t\t\tvertexData[1] = (d * h1) + (b * w1) + ty;\n\t\t\tvertexData[2] = (a * w0) + (c * h1) + tx;\n\t\t\tvertexData[3] = (d * h1) + (b * w0) + ty;\n\t\t\tvertexData[4] = (a * w0) + (c * h0) + tx;\n\t\t\tvertexData[5] = (d * h0) + (b * w0) + ty;\n\t\t\tvertexData[6] = (a * w1) + (c * h0) + tx;\n\t\t\tvertexData[7] = (d * h0) + (b * w1) + ty;\n\t\t\tif (this.proj._activeProjection) {\n\t\t\t\tthis.proj._activeProjection.surface.boundsQuad(vertexData, vertexData);\n\t\t\t}\n\t\t}\n\n\t\tif (!texture.uvMatrix) {\n\t\t\ttexture.uvMatrix = new TextureMatrix(texture);\n\t\t}\n\t\ttexture.uvMatrix.update();\n\n\t\tconst aTrans = this.aTrans;\n\t\taTrans.set(orig.width, 0, 0, orig.height, w1, h1);\n\t\tif (this.proj._surface === null) {\n\t\t\taTrans.prepend(this.transform.worldTransform);\n\t\t}\n\t\taTrans.invert();\n\t\taTrans.prepend((texture.uvMatrix as any).mapCoord);\n\t}\n\n\tcalculateTrimmedVertices() {\n\t\tconst wid = (this.transform as any)._worldID;\n\t\tconst tuid = (this._texture as any)._updateID;\n\t\tif (!this.vertexTrimmedData) {\n\t\t\tthis.vertexTrimmedData = new Float32Array(8);\n\t\t}\n\t\telse if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._transformTrimmedID = wid;\n\t\tthis._textureTrimmedID = tuid;\n\n\t\t// lets do some special trim code!\n\t\tconst texture = this._texture;\n\t\tconst vertexData = this.vertexTrimmedData;\n\t\tconst orig = texture.orig;\n\t\tconst anchor = (this._anchor as any) as { _x: number, _y: number };\n\n\t\t// lets calculate the new untrimmed bounds..\n\n\t\tconst w1 = -anchor._x * orig.width;\n\t\tconst w0 = w1 + orig.width;\n\n\t\tconst h1 = -anchor._y * orig.height;\n\t\tconst h0 = h1 + orig.height;\n\n\t\t//TODO: take rotations into account! form temporary bounds\n\n\t\tif (this.proj._surface) {\n\t\t\tvertexData[0] = w1;\n\t\t\tvertexData[1] = h1;\n\t\t\tvertexData[2] = w0;\n\t\t\tvertexData[3] = h1;\n\t\t\tvertexData[4] = w0;\n\t\t\tvertexData[5] = h0;\n\t\t\tvertexData[6] = w1;\n\t\t\tvertexData[7] = h0;\n\t\t\tthis.proj._surface.boundsQuad(vertexData, vertexData, this.transform.worldTransform);\n\t\t} else {\n\t\t\tlet wt = this.transform.worldTransform;\n\t\t\tlet a = wt.a;\n\t\t\tlet b = wt.b;\n\t\t\tlet c = wt.c;\n\t\t\tlet d = wt.d;\n\t\t\tlet tx = wt.tx;\n\t\t\tlet ty = wt.ty;\n\t\t\tvertexData[0] = (a * w1) + (c * h1) + tx;\n\t\t\tvertexData[1] = (d * h1) + (b * w1) + ty;\n\t\t\tvertexData[2] = (a * w0) + (c * h1) + tx;\n\t\t\tvertexData[3] = (d * h1) + (b * w0) + ty;\n\t\t\tvertexData[4] = (a * w0) + (c * h0) + tx;\n\t\t\tvertexData[5] = (d * h0) + (b * w0) + ty;\n\t\t\tvertexData[6] = (a * w1) + (c * h0) + tx;\n\t\t\tvertexData[7] = (d * h0) + (b * w1) + ty;\n\t\t\tif (this.proj._activeProjection) {\n\t\t\t\tthis.proj._activeProjection.surface.boundsQuad(vertexData, vertexData,\n\t\t\t\t\tthis.proj._activeProjection.legacy.worldTransform);\n\t\t\t}\n\t\t}\n\t}\n\n\tget worldTransform() {\n\t\treturn this.proj as any;\n\t}\n}","/// <reference path=\"../../types.d.ts\" />\n\nimport { Matrix } from '@pixi/math';\nimport { ProjectionSurface } from '../ProjectionSurface';\nimport { Sprite2s } from './Sprite2s';\nimport { Text, TextStyle } from '@pixi/text';\n\nexport class Text2s extends Text {\n\tconstructor(text?: string, style?: TextStyle, canvas?: HTMLCanvasElement) {\n\t\tsuper(text, style, canvas);\n\t\tthis.proj = new ProjectionSurface(this.transform);\n\t\tthis.pluginName = 'batch_bilinear';\n\t}\n\n\tproj: ProjectionSurface;\n\n\taTrans = new Matrix();\n\n\tget worldTransform() {\n\t\treturn this.proj as any;\n\t}\n}\n\n(Text2s.prototype as any).calculateVertices = Sprite2s.prototype.calculateVertices;\n(Text2s.prototype as any).calculateTrimmedVertices = Sprite2s.prototype.calculateTrimmedVertices;\n(Text2s.prototype as any)._calculateBounds = Sprite2s.prototype._calculateBounds;\n\n","// according to https://jsperf.com/obj-vs-array-view-access/1 , Float64Array is the best here\n/// <reference path=\"../types.d.ts\" />\n\nimport { AFFINE } from '../constants';\nimport { Point } from '@pixi/math';\n\nimport type { IPoint, Matrix } from '@pixi/math';\n\nconst mat3id = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\nexport class Matrix2d {\n\t/**\n\t * A default (identity) matrix\n\t *\n\t * @static\n\t * @const\n\t */\n\tstatic readonly IDENTITY = new Matrix2d();\n\n\t/**\n\t * A temp matrix\n\t *\n\t * @static\n\t * @const\n\t */\n\tstatic readonly TEMP_MATRIX = new Matrix2d();\n\n\t/**\n\t * mat3 implementation through array of 9 elements\n\t */\n\tmat3: Float64Array;\n\n\tfloatArray: Float32Array = null;\n\n\tconstructor(backingArray?: ArrayLike<number>) {\n\t\tthis.mat3 = new Float64Array(backingArray || mat3id);\n\t}\n\n\tget a() {\n\t\treturn this.mat3[0] / this.mat3[8];\n\t}\n\n\tget b() {\n\t\treturn this.mat3[1] / this.mat3[8];\n\t}\n\n\tget c() {\n\t\treturn this.mat3[3] / this.mat3[8];\n\t}\n\n\tget d() {\n\t\treturn this.mat3[4] / this.mat3[8];\n\t}\n\n\tget tx() {\n\t\treturn this.mat3[6] / this.mat3[8];\n\t}\n\n\tget ty() {\n\t\treturn this.mat3[7] / this.mat3[8];\n\t}\n\n\tset a(value: number) {\n\t\tthis.mat3[0] = value * this.mat3[8];\n\t}\n\n\tset b(value: number) {\n\t\tthis.mat3[1] = value * this.mat3[8];\n\t}\n\n\tset c(value: number) {\n\t\tthis.mat3[3] = value * this.mat3[8];\n\t}\n\n\tset d(value: number) {\n\t\tthis.mat3[4] = value * this.mat3[8];\n\t}\n\n\tset tx(value: number) {\n\t\tthis.mat3[6] = value * this.mat3[8];\n\t}\n\n\tset ty(value: number) {\n\t\tthis.mat3[7] = value * this.mat3[8];\n\t}\n\n\tset(a: number, b: number, c: number, d: number, tx: number, ty: number) {\n\t\tlet mat3 = this.mat3;\n\t\tmat3[0] = a;\n\t\tmat3[1] = b;\n\t\tmat3[2] = 0;\n\t\tmat3[3] = c;\n\t\tmat3[4] = d;\n\t\tmat3[5] = 0;\n\t\tmat3[6] = tx;\n\t\tmat3[7] = ty;\n\t\tmat3[8] = 1;\n\t\treturn this;\n\t}\n\n\ttoArray(transpose?: boolean, out?: Float32Array): Float32Array {\n\t\tif (!this.floatArray) {\n\t\t\tthis.floatArray = new Float32Array(9);\n\t\t}\n\n\t\tconst array = out || this.floatArray;\n\t\tconst mat3 = this.mat3;\n\n\t\tif (transpose) {\n\t\t\tarray[0] = mat3[0];\n\t\t\tarray[1] = mat3[1];\n\t\t\tarray[2] = mat3[2];\n\t\t\tarray[3] = mat3[3];\n\t\t\tarray[4] = mat3[4];\n\t\t\tarray[5] = mat3[5];\n\t\t\tarray[6] = mat3[6];\n\t\t\tarray[7] = mat3[7];\n\t\t\tarray[8] = mat3[8];\n\t\t} else {\n\t\t\t//this branch is NEVER USED in pixi\n\t\t\tarray[0] = mat3[0];\n\t\t\tarray[1] = mat3[3];\n\t\t\tarray[2] = mat3[6];\n\t\t\tarray[3] = mat3[1];\n\t\t\tarray[4] = mat3[4];\n\t\t\tarray[5] = mat3[7];\n\t\t\tarray[6] = mat3[2];\n\t\t\tarray[7] = mat3[5];\n\t\t\tarray[8] = mat3[8];\n\t\t}\n\n\t\treturn array;\n\t}\n\n\t//TODO: remove props\n\tapply(pos: IPoint, newPos: IPoint): IPoint {\n\t\tnewPos = newPos || new Point();\n\n\t\tconst mat3 = this.mat3;\n\t\tconst x = pos.x;\n\t\tconst y = pos.y;\n\n\t\tlet z = 1.0 / (mat3[2] * x + mat3[5] * y + mat3[8]);\n\t\tnewPos.x = z * (mat3[0] * x + mat3[3] * y + mat3[6]);\n\t\tnewPos.y = z * (mat3[1] * x + mat3[4] * y + mat3[7]);\n\n\t\treturn newPos;\n\t}\n\n\ttranslate(tx: number, ty: number) {\n\t\tconst mat3 = this.mat3;\n\t\tmat3[0] += tx * mat3[2];\n\t\tmat3[1] += ty * mat3[2];\n\t\tmat3[3] += tx * mat3[5];\n\t\tmat3[4] += ty * mat3[5];\n\t\tmat3[6] += tx * mat3[8];\n\t\tmat3[7] += ty * mat3[8];\n\t\treturn this;\n\t}\n\n\tscale(x: number, y: number) {\n\t\tconst mat3 = this.mat3;\n\t\tmat3[0] *= x;\n\t\tmat3[1] *= y;\n\t\tmat3[3] *= x;\n\t\tmat3[4] *= y;\n\t\tmat3[6] *= x;\n\t\tmat3[7] *= y;\n\t\treturn this;\n\t}\n\n\tscaleAndTranslate(scaleX: number, scaleY: number, tx: number, ty: number) {\n\t\tconst mat3 = this.mat3;\n\t\tmat3[0] = scaleX * mat3[0] + tx * mat3[2];\n\t\tmat3[1] = scaleY * mat3[1] + ty * mat3[2];\n\t\tmat3[3] = scaleX * mat3[3] + tx * mat3[5];\n\t\tmat3[4] = scaleY * mat3[4] + ty * mat3[5];\n\t\tmat3[6] = scaleX * mat3[6] + tx * mat3[8];\n\t\tmat3[7] = scaleY * mat3[7] + ty * mat3[8];\n\t}\n\n\t//TODO: remove props\n\tapplyInverse(pos: IPoint, newPos: IPoint): IPoint {\n\t\tnewPos = newPos || new Point();\n\n\t\tconst a = this.mat3;\n\t\tconst x = pos.x;\n\t\tconst y = pos.y;\n\n\t\tconst a00 = a[0], a01 = a[3], a02 = a[6],\n\t\t\ta10 = a[1], a11 = a[4], a12 = a[7],\n\t\t\ta20 = a[2], a21 = a[5], a22 = a[8];\n\n\t\tlet newX = (a22 * a11 - a12 * a21) * x + (-a22 * a01 + a02 * a21) * y + (a12 * a01 - a02 * a11);\n\t\tlet newY = (-a22 * a10 + a12 * a20) * x + (a22 * a00 - a02 * a20) * y + (-a12 * a00 + a02 * a10);\n\t\tlet newZ = (a21 * a10 - a11 * a20) * x + (-a21 * a00 + a01 * a20) * y + (a11 * a00 - a01 * a10);\n\n\t\tnewPos.x = newX / newZ;\n\t\tnewPos.y = newY / newZ;\n\n\t\treturn newPos;\n\t}\n\n\tinvert(): Matrix2d {\n\t\tconst a = this.mat3;\n\n\t\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\t\ta20 = a[6], a21 = a[7], a22 = a[8],\n\n\t\t\tb01 = a22 * a11 - a12 * a21,\n\t\t\tb11 = -a22 * a10 + a12 * a20,\n\t\t\tb21 = a21 * a10 - a11 * a20;\n\n\t\t// Calculate the determinant\n\t\tlet det = a00 * b01 + a01 * b11 + a02 * b21;\n\t\tif (!det) {\n\t\t\treturn this;\n\t\t}\n\t\tdet = 1.0 / det;\n\n\t\ta[0] = b01 * det;\n\t\ta[1] = (-a22 * a01 + a02 * a21) * det;\n\t\ta[2] = (a12 * a01 - a02 * a11) * det;\n\t\ta[3] = b11 * det;\n\t\ta[4] = (a22 * a00 - a02 * a20) * det;\n\t\ta[5] = (-a12 * a00 + a02 * a10) * det;\n\t\ta[6] = b21 * det;\n\t\ta[7] = (-a21 * a00 + a01 * a20) * det;\n\t\ta[8] = (a11 * a00 - a01 * a10) * det;\n\n\t\treturn this;\n\t}\n\n\tidentity(): Matrix2d {\n\t\tconst mat3 = this.mat3;\n\t\tmat3[0] = 1;\n\t\tmat3[1] = 0;\n\t\tmat3[2] = 0;\n\t\tmat3[3] = 0;\n\t\tmat3[4] = 1;\n\t\tmat3[5] = 0;\n\t\tmat3[6] = 0;\n\t\tmat3[7] = 0;\n\t\tmat3[8] = 1;\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\treturn new Matrix2d(this.mat3);\n\t}\n\n\tcopyTo2dOr3d(matrix: Matrix2d) {\n\t\tconst mat3 = this.mat3;\n\t\tconst ar2 = matrix.mat3;\n\t\tar2[0] = mat3[0];\n\t\tar2[1] = mat3[1];\n\t\tar2[2] = mat3[2];\n\t\tar2[3] = mat3[3];\n\t\tar2[4] = mat3[4];\n\t\tar2[5] = mat3[5];\n\t\tar2[6] = mat3[6];\n\t\tar2[7] = mat3[7];\n\t\tar2[8] = mat3[8];\n\t\treturn matrix;\n\t}\n\n\t/**\n\t * legacy method, change the values of given pixi matrix\n\t * @param matrix\n\t * @return matrix\n\t */\n\tcopyTo(matrix: Matrix, affine?: AFFINE, preserveOrientation?: boolean) {\n\t\tconst mat3 = this.mat3;\n\t\tconst d = 1.0 / mat3[8];\n\t\tconst tx = mat3[6] * d, ty = mat3[7] * d;\n\t\tmatrix.a = (mat3[0] - mat3[2] * tx) * d;\n\t\tmatrix.b = (mat3[1] - mat3[2] * ty) * d;\n\t\tmatrix.c = (mat3[3] - mat3[5] * tx) * d;\n\t\tmatrix.d = (mat3[4] - mat3[5] * ty) * d;\n\t\tmatrix.tx = tx;\n\t\tmatrix.ty = ty;\n\n\t\tif (affine >= 2) {\n\t\t\tlet D = matrix.a * matrix.d - matrix.b * matrix.c;\n\t\t\tif (!preserveOrientation) {\n\t\t\t\tD = Math.abs(D);\n\t\t\t}\n\t\t\tif (affine === AFFINE.POINT) {\n\t\t\t\tif (D > 0) {\n\t\t\t\t\tD = 1;\n\t\t\t\t} else D = -1;\n\t\t\t\tmatrix.a = D;\n\t\t\t\tmatrix.b = 0;\n\t\t\t\tmatrix.c = 0;\n\t\t\t\tmatrix.d = D;\n\t\t\t} else if (affine === AFFINE.AXIS_X) {\n\t\t\t\tD /= Math.sqrt(matrix.b * matrix.b + matrix.d * matrix.d);\n\t\t\t\tmatrix.c = 0;\n\t\t\t\tmatrix.d = D;\n\t\t\t} else if (affine === AFFINE.AXIS_Y) {\n\t\t\t\tD /= Math.sqrt(matrix.a * matrix.a + matrix.c * matrix.c);\n\t\t\t\tmatrix.a = D;\n\t\t\t\tmatrix.c = 0;\n\t\t\t}\n\t\t\telse if (affine === AFFINE.AXIS_XR) {\n\t\t\t\tmatrix.a =  matrix.d * D;\n\t\t\t\tmatrix.c = -matrix.b * D;\n\t\t\t}\n\t\t}\n\t\treturn matrix;\n\t}\n\n\t/**\n\t * legacy method, change the values of given pixi matrix\n\t * @param matrix\n\t * @return\n\t */\n\tcopyFrom(matrix: Matrix) {\n\t\tconst mat3 = this.mat3;\n\t\tmat3[0] = matrix.a;\n\t\tmat3[1] = matrix.b;\n\t\tmat3[2] = 0;\n\t\tmat3[3] = matrix.c;\n\t\tmat3[4] = matrix.d;\n\t\tmat3[5] = 0;\n\t\tmat3[6] = matrix.tx;\n\t\tmat3[7] = matrix.ty;\n\t\tmat3[8] = 1.0;\n\t\treturn this;\n\t}\n\n\tsetToMultLegacy(pt: Matrix, lt: Matrix2d) {\n\t\tconst out = this.mat3;\n\t\tconst b = lt.mat3;\n\n\t\tconst a00 = pt.a, a01 = pt.b,\n\t\t\ta10 = pt.c, a11 = pt.d,\n\t\t\ta20 = pt.tx, a21 = pt.ty,\n\n\t\t\tb00 = b[0], b01 = b[1], b02 = b[2],\n\t\t\tb10 = b[3], b11 = b[4], b12 = b[5],\n\t\t\tb20 = b[6], b21 = b[7], b22 = b[8];\n\n\n\t\tout[0] = b00 * a00 + b01 * a10 + b02 * a20;\n\t\tout[1] = b00 * a01 + b01 * a11 + b02 * a21;\n\t\tout[2] = b02;\n\n\t\tout[3] = b10 * a00 + b11 * a10 + b12 * a20;\n\t\tout[4] = b10 * a01 + b11 * a11 + b12 * a21;\n\t\tout[5] = b12;\n\n\t\tout[6] = b20 * a00 + b21 * a10 + b22 * a20;\n\t\tout[7] = b20 * a01 + b21 * a11 + b22 * a21;\n\t\tout[8] = b22;\n\n\t\treturn this;\n\t}\n\n\tsetToMultLegacy2(pt: Matrix2d, lt: Matrix) {\n\t\tconst out = this.mat3;\n\t\tconst a = pt.mat3;\n\n\t\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\t\ta20 = a[6], a21 = a[7], a22 = a[8],\n\n\t\t\tb00 = lt.a, b01 = lt.b,\n\t\t\tb10 = lt.c, b11 = lt.d,\n\t\t\tb20 = lt.tx, b21 = lt.ty;\n\n\n\t\tout[0] = b00 * a00 + b01 * a10;\n\t\tout[1] = b00 * a01 + b01 * a11;\n\t\tout[2] = b00 * a02 + b01 * a12;\n\n\t\tout[3] = b10 * a00 + b11 * a10;\n\t\tout[4] = b10 * a01 + b11 * a11;\n\t\tout[5] = b10 * a02 + b11 * a12;\n\n\t\tout[6] = b20 * a00 + b21 * a10 + a20;\n\t\tout[7] = b20 * a01 + b21 * a11 + a21;\n\t\tout[8] = b20 * a02 + b21 * a12 + a22;\n\n\t\treturn this;\n\t}\n\n\t// that's transform multiplication we use\n\tsetToMult(pt: Matrix2d, lt: Matrix2d) {\n\t\tconst out = this.mat3;\n\t\tconst a = pt.mat3, b = lt.mat3;\n\n\t\tconst a00 = a[0], a01 = a[1], a02 = a[2],\n\t\t\ta10 = a[3], a11 = a[4], a12 = a[5],\n\t\t\ta20 = a[6], a21 = a[7], a22 = a[8],\n\n\t\t\tb00 = b[0], b01 = b[1], b02 = b[2],\n\t\t\tb10 = b[3], b11 = b[4], b12 = b[5],\n\t\t\tb20 = b[6], b21 = b[7], b22 = b[8];\n\n\t\tout[0] = b00 * a00 + b01 * a10 + b02 * a20;\n\t\tout[1] = b00 * a01 + b01 * a11 + b02 * a21;\n\t\tout[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n\t\tout[3] = b10 * a00 + b11 * a10 + b12 * a20;\n\t\tout[4] = b10 * a01 + b11 * a11 + b12 * a21;\n\t\tout[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n\t\tout[6] = b20 * a00 + b21 * a10 + b22 * a20;\n\t\tout[7] = b20 * a01 + b21 * a11 + b22 * a21;\n\t\tout[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\n\t\treturn this;\n\t}\n\n\tprepend(lt: any) {\n\t\tif (lt.mat3) {\n\t\t\treturn this.setToMult(lt, this);\n\t\t} else {\n\t\t\treturn this.setToMultLegacy(lt, this);\n\t\t}\n\t}\n}\n","/// <reference path=\"types.d.ts\" />\n\nimport { Point } from '@pixi/math';\n\nimport type { IPoint } from '@pixi/math';\n\nexport const utils = {\n\tgetIntersectionFactor(p1: IPoint, p2: IPoint, p3: IPoint, p4: IPoint, out: IPoint): number {\n\t\tlet A1 = p2.x - p1.x, B1 = p3.x - p4.x, C1 = p3.x - p1.x;\n\t\tlet A2 = p2.y - p1.y, B2 = p3.y - p4.y, C2 = p3.y - p1.y;\n\t\tlet D = A1 * B2 - A2 * B1;\n\t\tif (Math.abs(D) < 1e-7) {\n\t\t\tout.x = A1;\n\t\t\tout.y = A2;\n\t\t\treturn 0;\n\t\t}\n\t\tlet T = C1 * B2 - C2 * B1;\n\t\tlet U = A1 * C2 - A2 * C1;\n\n\t\tlet t = T / D, u = U / D;\n\t\tif (u < (1e-6) || u - 1 > -1e-6) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tout.x = p1.x + t * (p2.x - p1.x);\n\t\tout.y = p1.y + t * (p2.y - p1.y);\n\n\t\treturn 1;\n\t},\n\tgetPositionFromQuad(p: Array<IPoint>, anchor: IPoint, out: IPoint) {\n\t\tout = out || new Point();\n\t\tlet a1 = 1.0 - anchor.x, a2 = 1.0 - a1;\n\t\tlet b1 = 1.0 - anchor.y, b2 = 1.0 - b1;\n\t\tout.x = (p[0].x * a1 + p[1].x * a2) * b1 + (p[3].x * a1 + p[2].x * a2) * b2;\n\t\tout.y = (p[0].y * a1 + p[1].y * a2) * b1 + (p[3].y * a1 + p[2].y * a2) * b2;\n\t\treturn out;\n\t}\n};\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Matrix2d } from './Matrix2d';\nimport { Matrix, ObservablePoint, Point, Rectangle, Transform } from '@pixi/math';\nimport { LinearProjection } from '../base/LinearProjection';\nimport { utils } from '../utils';\n\nimport type { IPoint } from '@pixi/math';\nimport type { Sprite } from '@pixi/sprite';\n\nconst t0 = new Point();\nconst tt = [new Point(), new Point(), new Point(), new Point()];\nconst tempRect = new Rectangle();\nconst tempMat = new Matrix2d();\n\nexport class Projection2d extends LinearProjection<Matrix2d> {\n\tconstructor(legacy: Transform, enable?: boolean) {\n\t\tsuper(legacy, enable);\n\t\tthis.local = new Matrix2d();\n\t\tthis.world = new Matrix2d();\n\t}\n\n\tmatrix = new Matrix2d();\n\tpivot = new ObservablePoint(this.onChange, this, 0, 0);\n\n\treverseLocalOrder = false;\n\n\tonChange() {\n\t\t// Private members\n\t\tconst pivot = (this.pivot as any) as { _x: number, _y: number};\n\t\tconst mat3 = this.matrix.mat3;\n\n\t\tmat3[6] = -(pivot._x * mat3[0] + pivot._y * mat3[3]);\n\t\tmat3[7] = -(pivot._x * mat3[1] + pivot._y * mat3[4]);\n\n\t\tthis._projID++;\n\t}\n\n\tsetAxisX(p: IPoint, factor: number = 1): void {\n\t\tconst x = p.x, y = p.y;\n\t\tconst d = Math.sqrt(x * x + y * y);\n\t\tconst mat3 = this.matrix.mat3;\n\t\tmat3[0] = x / d;\n\t\tmat3[1] = y / d;\n\t\tmat3[2] = factor / d;\n\n\t\tthis.onChange();\n\t}\n\n\tsetAxisY(p: IPoint, factor: number = 1) {\n\t\tconst x = p.x, y = p.y;\n\t\tconst d = Math.sqrt(x * x + y * y);\n\t\tconst mat3 = this.matrix.mat3;\n\t\tmat3[3] = x / d;\n\t\tmat3[4] = y / d;\n\t\tmat3[5] = factor / d;\n\t\tthis.onChange();\n\t}\n\n\tmapSprite(sprite: Sprite, quad: Array<IPoint>) {\n\t\tconst tex = sprite.texture;\n\n\t\ttempRect.x = -sprite.anchor.x * tex.orig.width;\n\t\ttempRect.y = -sprite.anchor.y * tex.orig.height;\n\t\ttempRect.width = tex.orig.width;\n\t\ttempRect.height = tex.orig.height;\n\n\t\treturn this.mapQuad(tempRect, quad);\n\t}\n\n\tmapQuad(rect: Rectangle, p: Array<IPoint>) {\n\t\t// utils.getPositionFromQuad(p, anchor, t0);\n\t\ttt[0].set(rect.x, rect.y);\n\t\ttt[1].set(rect.x + rect.width, rect.y);\n\t\ttt[2].set(rect.x + rect.width, rect.y + rect.height);\n\t\ttt[3].set(rect.x, rect.y + rect.height);\n\n\t\tlet k1 = 1, k2 = 2, k3 = 3;\n\t\tlet f = utils.getIntersectionFactor(p[0], p[2], p[1], p[3], t0);\n\t\tif (f !== 0) {\n\t\t\tk1 = 1;\n\t\t\tk2 = 3;\n\t\t\tk3 = 2;\n\t\t} else {\n\t\t\treturn;\n\t\t\t/*f = utils.getIntersectionFactor(p[0], p[1], p[2], p[3], t0);\n\t\t\tif (f > 0) {\n\t\t\t\tk1 = 2;\n\t\t\t\tk2 = 3;\n\t\t\t\tk3 = 1;\n\t\t\t} else {\n\t\t\t\tf = utils.getIntersectionFactor(p[0], p[3], p[1], p[2], t0);\n\t\t\t\tif (f > 0) {\n\t\t\t\t\t// cant find it :(\n\t\t\t\t\tk1 = 1;\n\t\t\t\t\tk2 = 2;\n\t\t\t\t\tk3 = 3;\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}*/\n\t\t}\n\t\tlet d0 = Math.sqrt((p[0].x - t0.x) * (p[0].x - t0.x) + (p[0].y - t0.y) * (p[0].y - t0.y));\n\t\tlet d1 = Math.sqrt((p[k1].x - t0.x) * (p[k1].x - t0.x) + (p[k1].y - t0.y) * (p[k1].y - t0.y));\n\t\tlet d2 = Math.sqrt((p[k2].x - t0.x) * (p[k2].x - t0.x) + (p[k2].y - t0.y) * (p[k2].y - t0.y));\n\t\tlet d3 = Math.sqrt((p[k3].x - t0.x) * (p[k3].x - t0.x) + (p[k3].y - t0.y) * (p[k3].y - t0.y));\n\n\t\tlet q0 = (d0 + d3) / d3;\n\t\tlet q1 = (d1 + d2) / d2;\n\t\tlet q2 = (d1 + d2) / d1;\n\n\t\tlet mat3 = this.matrix.mat3;\n\t\tmat3[0] = tt[0].x * q0;\n\t\tmat3[1] = tt[0].y * q0;\n\t\tmat3[2] = q0;\n\t\tmat3[3] = tt[k1].x * q1;\n\t\tmat3[4] = tt[k1].y * q1;\n\t\tmat3[5] = q1;\n\t\tmat3[6] = tt[k2].x * q2;\n\t\tmat3[7] = tt[k2].y * q2;\n\t\tmat3[8] = q2;\n\t\tthis.matrix.invert();\n\n\t\tmat3 = tempMat.mat3;\n\t\tmat3[0] = p[0].x;\n\t\tmat3[1] = p[0].y;\n\t\tmat3[2] = 1;\n\t\tmat3[3] = p[k1].x;\n\t\tmat3[4] = p[k1].y;\n\t\tmat3[5] = 1;\n\t\tmat3[6] = p[k2].x;\n\t\tmat3[7] = p[k2].y;\n\t\tmat3[8] = 1;\n\n\t\tthis.matrix.setToMult(tempMat, this.matrix);\n\t\tthis._projID++;\n\t}\n\n\tupdateLocalTransform(lt: Matrix) {\n\t\tif (this._projID !== 0) {\n\t\t\tif (this.reverseLocalOrder) {\n\t\t\t\t// tilingSprite inside order\n\t\t\t\tthis.local.setToMultLegacy2(this.matrix, lt);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// good order\n\t\t\t\tthis.local.setToMultLegacy(lt, this.matrix);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.local.copyFrom(lt);\n\t\t}\n\t}\n\n\tclear() {\n\t\tsuper.clear();\n\t\tthis.matrix.identity();\n\t\tthis.pivot.set(0, 0);\n\t}\n}","/// <reference path=\"../../types.d.ts\" />\n\nimport { Container } from '@pixi/display';\nimport { Matrix } from '@pixi/math';\nimport { Projection2d } from '../../proj2d/Projection2d';\nimport { Sprite } from '@pixi/sprite';\nimport { Sprite2s } from './Sprite2s';\n\nSprite.prototype.convertTo2s = function () {\n\tif (this.proj) return;\n\t//cointainer\n\tthis.pluginName = 'sprite_bilinear';\n\tthis.aTrans = new Matrix();\n\tthis.calculateVertices = Sprite2s.prototype.calculateVertices;\n\tthis.calculateTrimmedVertices = Sprite2s.prototype.calculateTrimmedVertices;\n\tthis._calculateBounds = Sprite2s.prototype._calculateBounds;\n\tContainer.prototype.convertTo2s.call(this);\n};\n\nContainer.prototype.convertTo2s = function () {\n\tif (this.proj) return;\n\tthis.proj = new Projection2d(this.transform);\n\tObject.defineProperty(this, \"worldTransform\", {\n\t\tget: function () {\n\t\t\treturn this.proj;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\nContainer.prototype.convertSubtreeTo2s = function () {\n\tthis.convertTo2s();\n\tfor (let i = 0; i < this.children.length; i++) {\n\t\tthis.children[i].convertSubtreeTo2s();\n\t}\n};\n\n","/// <reference path=\"../types.d.ts\" />\n\nimport { BatchShaderGenerator, Buffer, Geometry, Renderer, ViewableBuffer } from '@pixi/core';\nimport { Matrix } from '@pixi/math';\nimport { Sprite } from '@pixi/sprite';\nimport { Sprite2s } from './sprites/Sprite2s';\nimport { TYPES } from '@pixi/constants';\nimport { UniformBatchRenderer } from '../base/webgl/UniformBatchRenderer';\nimport { premultiplyTint } from '@pixi/utils';\nimport shaderVert from './sprite-bilinear.vert';\nimport shaderFrag from './sprite-bilinear.frag';\n\nexport class BatchBilineardGeometry extends Geometry\n{\n\t_buffer: Buffer;\n\t_indexBuffer : Buffer;\n\n\tconstructor(_static = false)\n\t{\n\t\tsuper();\n\n\t\tthis._buffer = new Buffer(null, _static, false);\n\n\t\tthis._indexBuffer = new Buffer(null, _static, true);\n\n\t\tthis.addAttribute('aVertexPosition', this._buffer, 2, false, TYPES.FLOAT)\n\t\t\t.addAttribute('aTrans1', this._buffer, 3, false, TYPES.FLOAT)\n\t\t\t.addAttribute('aTrans2', this._buffer, 3, false, TYPES.FLOAT)\n\t\t\t.addAttribute('aSamplerSize', this._buffer, 2, false, TYPES.FLOAT)\n\t\t\t.addAttribute('aFrame', this._buffer, 4, false, TYPES.FLOAT)\n\t\t\t.addAttribute('aColor', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\n\t\t\t.addAttribute('aTextureId', this._buffer, 1, true, TYPES.FLOAT)\n\t\t\t.addIndex(this._indexBuffer);\n\t}\n}\n\nexport class BatchBilinearPluginFactory {\n\tstatic create(options: any): any\n\t{\n\t\tconst { vertex, fragment, vertexSize, geometryClass } = (Object as any).assign({\n\t\t\tvertex: shaderVert,\n\t\t\tfragment: shaderFrag,\n\t\t\tgeometryClass: BatchBilineardGeometry,\n\t\t\tvertexSize: 16,\n\t\t}, options);\n\n\t\treturn class BatchPlugin extends UniformBatchRenderer\n\t\t{\n\t\t\tconstructor(renderer: Renderer)\n\t\t\t{\n\t\t\t\tsuper(renderer);\n\n\t\t\t\tthis.shaderGenerator = new BatchShaderGenerator(vertex, fragment);\n\t\t\t\tthis.geometryClass = geometryClass;\n\t\t\t\tthis.vertexSize = vertexSize;\n\t\t\t}\n\n\t\t\tdefUniforms = {\n\t\t\t\ttranslationMatrix: new Matrix(),\n\t\t\t\tdistortion: new Float32Array([0, 0, Infinity, Infinity])\n\t\t\t};\n\t\t\tsize = 1000;\n\t\t\tforceMaxTextures = 1;\n\n\t\t\tgetUniforms(sprite: Sprite) {\n\t\t\t\tlet  { proj } = sprite as Sprite2s;\n\t\t\t\tif (proj.surface !== null) {\n\t\t\t\t\treturn proj.uniforms;\n\t\t\t\t}\n\t\t\t\tif (proj._activeProjection !== null) {\n\t\t\t\t\treturn proj._activeProjection.uniforms;\n\t\t\t\t}\n\t\t\t\treturn this.defUniforms;\n\t\t\t}\n\n\t\t\tpackInterleavedGeometry(element: any, attributeBuffer: ViewableBuffer, indexBuffer: Uint16Array, aIndex: number, iIndex: number)\n\t\t\t{\n\t\t\t\tconst {\n\t\t\t\t\tuint32View,\n\t\t\t\t\tfloat32View,\n\t\t\t\t} = attributeBuffer;\n\t\t\t\tconst p = aIndex / this.vertexSize;\n\t\t\t\tconst indices = element.indices;\n\t\t\t\tconst vertexData = element.vertexData;\n\t\t\t\tconst tex = element._texture;\n\t\t\t\tconst frame = tex._frame;\n\t\t\t\tconst aTrans = element.aTrans;\n\t\t\t\tconst { _batchLocation, realWidth, realHeight, resolution } = element._texture.baseTexture;\n\n\t\t\t\tconst alpha = Math.min(element.worldAlpha, 1.0);\n\n\t\t\t\tconst argb = alpha < 1.0 && element._texture.baseTexture.alphaMode ? premultiplyTint(element._tintRGB, alpha)\n\t\t\t\t\t: element._tintRGB + (alpha * 255 << 24);\n\n\t\t\t\tfor (let i = 0; i < vertexData.length; i += 2)\n\t\t\t\t{\n\t\t\t\t\tfloat32View[aIndex] = vertexData[i];\n\t\t\t\t\tfloat32View[aIndex + 1] = vertexData[i + 1];\n\n\t\t\t\t\tfloat32View[aIndex + 2] = aTrans.a;\n\t\t\t\t\tfloat32View[aIndex + 3] = aTrans.c;\n\t\t\t\t\tfloat32View[aIndex + 4] = aTrans.tx;\n\t\t\t\t\tfloat32View[aIndex + 5] = aTrans.b;\n\t\t\t\t\tfloat32View[aIndex + 6] = aTrans.d;\n\t\t\t\t\tfloat32View[aIndex + 7] = aTrans.ty;\n\n\t\t\t\t\tfloat32View[aIndex + 8] = realWidth;\n\t\t\t\t\tfloat32View[aIndex + 9] = realHeight;\n\t\t\t\t\tfloat32View[aIndex + 10] = frame.x * resolution;\n\t\t\t\t\tfloat32View[aIndex + 11] = frame.y * resolution;\n\t\t\t\t\tfloat32View[aIndex + 12] = (frame.x + frame.width) * resolution;\n\t\t\t\t\tfloat32View[aIndex + 13] = (frame.y + frame.height) * resolution;\n\n\t\t\t\t\tuint32View[aIndex + 14] = argb;\n\t\t\t\t\tfloat32View[aIndex + 15] = _batchLocation;\n\t\t\t\t\taIndex += 16;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < indices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tindexBuffer[iIndex++] = p + indices[i];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n\nRenderer.registerPlugin('batch_bilinear', BatchBilinearPluginFactory.create({}));\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Container } from '@pixi/display';\nimport { Projection2d } from './Projection2d';\nimport { TRANSFORM_STEP } from '../constants';\n\nimport type { DisplayObject } from '@pixi/display';\nimport type { IPoint } from '@pixi/math';\n\nexport function container2dWorldTransform() {\n\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n}\n\nexport class Container2d extends Container {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.proj = new Projection2d(this.transform);\n\t}\n\n\tproj: Projection2d;\n\n\ttoLocal<T extends IPoint>(position: IPoint, from?: DisplayObject,\n\t\t\tpoint?: T, skipUpdate?: boolean,\n\t\t\tstep = TRANSFORM_STEP.ALL): T {\n\n\t\tif (from)\n\t\t{\n\t\t\tposition = from.toGlobal(position, point, skipUpdate);\n\t\t}\n\n\t\tif (!skipUpdate)\n\t\t{\n\t\t\tthis._recursivePostUpdateTransform();\n\t\t}\n\n\t\tif (step >= TRANSFORM_STEP.PROJ) {\n\t\t\tif (!skipUpdate) {\n\t\t\t\tthis.displayObjectUpdateTransform();\n\t\t\t}\n\t\t\tif (this.proj.affine) {\n\t\t\t\treturn this.transform.worldTransform.applyInverse(position as any, point as any) as any;\n\t\t\t}\n\t\t\treturn this.proj.world.applyInverse(position, point) as any;\n\t\t}\n\n\t\tif (this.parent) {\n\t\t\tpoint  = this.parent.worldTransform.applyInverse(position as any, point as any) as any;\n\t\t} else {\n\t\t\tpoint.copyFrom(position);\n\t\t}\n\t\tif (step === TRANSFORM_STEP.NONE) {\n\t\t\treturn point;\n\t\t}\n\n\t\treturn this.transform.localTransform.applyInverse(point as any, point as any) as any;\n\t}\n\n\tget worldTransform() {\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t}\n}\n\nexport let container2dToLocal = Container2d.prototype.toLocal;\n","/// <reference path=\"../../types.d.ts\" />\n\nimport { container2dToLocal } from '../Container2d';\nimport { DRAW_MODES } from '@pixi/constants';\nimport { Geometry, Program, Renderer, Shader, State, Texture } from '@pixi/core';\nimport { Mesh, MeshMaterial, MeshGeometry } from '@pixi/mesh';\nimport { Projection2d } from '../Projection2d';\nimport { TRANSFORM_STEP } from '../../constants';\nimport defaultVertexShader from './mesh2d-default.vert';\nimport defaultFragmentShader from './mesh2d-default.frag';\n\nimport type { DisplayObject } from '@pixi/display';\nimport type { IPoint } from '@pixi/math';\n\nexport class Mesh2d extends Mesh {\n\tstatic defaultVertexShader = defaultVertexShader;\n\tstatic defaultFragmentShader = defaultFragmentShader;\n\n\tconstructor(geometry: Geometry, shader: Shader, state: State, drawMode?: DRAW_MODES)\n\t{\n\t\tsuper(geometry, shader, state, drawMode);\n\t\tthis.proj = new Projection2d(this.transform);\n\t}\n\n\tvertexData2d: Float32Array = null;\n\tproj: Projection2d;\n\n\tcalculateVertices()\n\t{\n\t\tif (this.proj._affine) {\n\t\t\tthis.vertexData2d = null;\n\t\t\tsuper.calculateVertices();\n\t\t\treturn;\n\t\t}\n\n\t\tconst geometry = this.geometry as any;\n\t\tconst vertices = geometry.buffers[0].data;\n\t\tconst thisAny = this as any;\n\n\t\tif (geometry.vertexDirtyId === thisAny.vertexDirty && thisAny._transformID === thisAny.transform._worldID)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthisAny._transformID = thisAny.transform._worldID;\n\n\t\tif (thisAny.vertexData.length !== vertices.length)\n\t\t{\n\t\t\tthisAny.vertexData = new Float32Array(vertices.length);\n\t\t}\n\n\t\tif (!this.vertexData2d || this.vertexData2d.length !== vertices.length * 3 / 2)\n\t\t{\n\t\t\tthis.vertexData2d = new Float32Array(vertices.length * 3);\n\t\t}\n\n\t\tconst wt = this.proj.world.mat3;\n\n\t\tconst vertexData2d = this.vertexData2d;\n\t\tconst vertexData = thisAny.vertexData;\n\n\t\tfor (let i = 0; i < vertexData.length / 2; i++)\n\t\t{\n\t\t\tconst x = vertices[(i * 2)];\n\t\t\tconst y = vertices[(i * 2) + 1];\n\n\t\t\tconst xx = (wt[0] * x) + (wt[3] * y) + wt[6];\n\t\t\tconst yy = (wt[1] * x) + (wt[4] * y) + wt[7];\n\t\t\tconst ww = (wt[2] * x) + (wt[5] * y) + wt[8];\n\n\t\t\tvertexData2d[i * 3] = xx;\n\t\t\tvertexData2d[i * 3 + 1] = yy;\n\t\t\tvertexData2d[i * 3 + 2] = ww;\n\n\t\t\tvertexData[(i * 2)] = xx / ww;\n\t\t\tvertexData[(i * 2) + 1] = yy / ww;\n\t\t}\n\n\t\tthisAny.vertexDirty = geometry.vertexDirtyId;\n\t}\n\n\t_renderDefault(renderer: Renderer) {\n\t\tconst shader = this.shader as MeshMaterial;\n\n\t\tshader.alpha = this.worldAlpha;\n\t\tif (shader.update)\n\t\t{\n\t\t\tshader.update();\n\t\t}\n\n\t\trenderer.batch.flush();\n\n\t\tif ((shader as any).program.uniformData.translationMatrix)\n\t\t{\n\t\t\tshader.uniforms.translationMatrix = this.worldTransform.toArray(true);\n\t\t}\n\n\t\t// bind and sync uniforms..\n\t\trenderer.shader.bind(shader, false);\n\n\t\t// set state..\n\t\trenderer.state.set(this.state);\n\n\t\t// bind the geometry...\n\t\trenderer.geometry.bind(this.geometry, shader);\n\n\t\t// then render it\n\t\trenderer.geometry.draw(this.drawMode, this.size, this.start, (this.geometry as any).instanceCount);\n\t}\n\n\ttoLocal<T extends IPoint>(position: IPoint, from?: DisplayObject,\n\t\t\t\t\t\t\t\t\tpoint?: T, skipUpdate?: boolean,\n\t\t\t\t\t\t\t\t\tstep = TRANSFORM_STEP.ALL): T {\n\t\treturn container2dToLocal.call(this, position, from, point, skipUpdate, step);\n\t}\n\n\tget worldTransform() {\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t}\n}\n\nexport class SimpleMesh2d extends Mesh2d {\n\tconstructor(texture: Texture, vertices?: Float32Array, uvs?: Float32Array,\n\t\t\t\tindices?: Uint16Array, drawMode?: number) {\n\t\tsuper(new MeshGeometry(vertices, uvs, indices),\n\t\t\tnew MeshMaterial(texture, {\n\t\t\t\tprogram: Program.from(Mesh2d.defaultVertexShader, Mesh2d.defaultFragmentShader),\n\t\t\t\tpluginName: 'batch2d'\n\t\t\t}),\n\t\t\tnull,\n\t\t\tdrawMode);\n\n\t\t(this.geometry.getBuffer('aVertexPosition') as any).static = false;\n\t}\n\n\tautoUpdate = true;\n\n\tget vertices()\n\t{\n\t\treturn this.geometry.getBuffer('aVertexPosition').data as Float32Array;\n\t}\n\tset vertices(value)\n\t{\n\t\tthis.geometry.getBuffer('aVertexPosition').data = value;\n\t}\n\n\tprotected _render(renderer?: Renderer)\n\t{\n\t\tif (this.autoUpdate)\n\t\t{\n\t\t\tthis.geometry.getBuffer('aVertexPosition').update();\n\t\t}\n\n\t\t(super._render as any)(renderer);\n\t}\n}\n","/// <reference path=\"../../types.d.ts\" />\n\nimport { Projection2d } from '../Projection2d';\nimport { Sprite } from '@pixi/sprite';\nimport { Texture } from '@pixi/core';\nimport { TRANSFORM_STEP } from '../../constants';\nimport { container2dToLocal } from '../Container2d';\n\nimport type { DisplayObject } from '@pixi/display';\nimport type { IPoint } from '@pixi/math';\n\nexport class Sprite2d extends Sprite {\n\tconstructor(texture: Texture) {\n\t\tsuper(texture);\n\n\t\tthis.proj = new Projection2d(this.transform);\n\t\tthis.pluginName = 'batch2d';\n\t}\n\n\tvertexData2d: Float32Array = null;\n\tproj: Projection2d;\n\n\t_calculateBounds() {\n\t\tthis.calculateTrimmedVertices();\n\t\tthis._bounds.addQuad(this.vertexTrimmedData as any);\n\t}\n\n\tcalculateVertices() {\n\t\tconst texture = this._texture;\n\n\t\tif (this.proj._affine) {\n\t\t\tthis.vertexData2d = null;\n\t\t\tsuper.calculateVertices();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.vertexData2d) {\n\t\t\tthis.vertexData2d = new Float32Array(12);\n\t\t}\n\n\t\tconst wid = (this.transform as any)._worldID;\n\t\tconst tuid = (texture as any)._updateID;\n\t\tif (this._transformID === wid && this._textureID === tuid) {\n\t\t\treturn;\n\t\t}\n\t\t// update texture UV here, because base texture can be changed without calling `_onTextureUpdate`\n\t\tif (this._textureID !== tuid) {\n\t\t\t(this as any).uvs = (texture as any)._uvs.uvsFloat32;\n\t\t}\n\n\t\tthis._transformID = wid;\n\t\tthis._textureID = tuid;\n\n\t\tconst wt = this.proj.world.mat3;\n\t\tconst vertexData2d = this.vertexData2d;\n\t\tconst vertexData = this.vertexData;\n\t\tconst trim = texture.trim;\n\t\tconst orig = texture.orig;\n\t\tconst anchor = (this._anchor as any) as { _x: number, _y: number };\n\n\t\tlet w0 = 0;\n\t\tlet w1 = 0;\n\t\tlet h0 = 0;\n\t\tlet h1 = 0;\n\n\t\tif (trim) {\n\t\t\tw1 = trim.x - (anchor._x * orig.width);\n\t\t\tw0 = w1 + trim.width;\n\n\t\t\th1 = trim.y - (anchor._y * orig.height);\n\t\t\th0 = h1 + trim.height;\n\t\t} else {\n\t\t\tw1 = -anchor._x * orig.width;\n\t\t\tw0 = w1 + orig.width;\n\n\t\t\th1 = -anchor._y * orig.height;\n\t\t\th0 = h1 + orig.height;\n\t\t}\n\n\t\tvertexData2d[0] = (wt[0] * w1) + (wt[3] * h1) + wt[6];\n\t\tvertexData2d[1] = (wt[1] * w1) + (wt[4] * h1) + wt[7];\n\t\tvertexData2d[2] = (wt[2] * w1) + (wt[5] * h1) + wt[8];\n\n\t\tvertexData2d[3] = (wt[0] * w0) + (wt[3] * h1) + wt[6];\n\t\tvertexData2d[4] = (wt[1] * w0) + (wt[4] * h1) + wt[7];\n\t\tvertexData2d[5] = (wt[2] * w0) + (wt[5] * h1) + wt[8];\n\n\t\tvertexData2d[6] = (wt[0] * w0) + (wt[3] * h0) + wt[6];\n\t\tvertexData2d[7] = (wt[1] * w0) + (wt[4] * h0) + wt[7];\n\t\tvertexData2d[8] = (wt[2] * w0) + (wt[5] * h0) + wt[8];\n\n\t\tvertexData2d[9] = (wt[0] * w1) + (wt[3] * h0) + wt[6];\n\t\tvertexData2d[10] = (wt[1] * w1) + (wt[4] * h0) + wt[7];\n\t\tvertexData2d[11] = (wt[2] * w1) + (wt[5] * h0) + wt[8];\n\n\t\tvertexData[0] = vertexData2d[0] / vertexData2d[2];\n\t\tvertexData[1] = vertexData2d[1] / vertexData2d[2];\n\n\t\tvertexData[2] = vertexData2d[3] / vertexData2d[5];\n\t\tvertexData[3] = vertexData2d[4] / vertexData2d[5];\n\n\t\tvertexData[4] = vertexData2d[6] / vertexData2d[8];\n\t\tvertexData[5] = vertexData2d[7] / vertexData2d[8];\n\n\t\tvertexData[6] = vertexData2d[9] / vertexData2d[11];\n\t\tvertexData[7] = vertexData2d[10] / vertexData2d[11];\n\t}\n\n\tcalculateTrimmedVertices() {\n\t\tif (this.proj._affine) {\n\t\t\tsuper.calculateTrimmedVertices();\n\t\t\treturn;\n\t\t}\n\n\t\tconst wid = (this.transform as any)._worldID;\n\t\tconst tuid = (this._texture as any)._updateID;\n\t\tif (!this.vertexTrimmedData) {\n\t\t\tthis.vertexTrimmedData = new Float32Array(8);\n\t\t} else if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._transformTrimmedID = wid;\n\t\tthis._textureTrimmedID = tuid;\n\n\t\t// lets do some special trim code!\n\t\tconst texture = this._texture;\n\t\tconst vertexData = this.vertexTrimmedData;\n\t\tconst orig = texture.orig;\n\t\tconst anchor = (this._anchor as any) as { _x: number, _y: number };\n\n\t\t// lets calculate the new untrimmed bounds..\n\t\tconst wt = this.proj.world.mat3;\n\n\t\tconst w1 = -anchor._x * orig.width;\n\t\tconst w0 = w1 + orig.width;\n\n\t\tconst h1 = -anchor._y * orig.height;\n\t\tconst h0 = h1 + orig.height;\n\n\t\tlet z = 1.0 / (wt[2] * w1 + wt[5] * h1 + wt[8]);\n\t\tvertexData[0] = z * ((wt[0] * w1) + (wt[3] * h1) + wt[6]);\n\t\tvertexData[1] = z * ((wt[1] * w1) + (wt[4] * h1) + wt[7]);\n\n\t\tz = 1.0 / (wt[2] * w0 + wt[5] * h1 + wt[8]);\n\t\tvertexData[2] = z * ((wt[0] * w0) + (wt[3] * h1) + wt[6]);\n\t\tvertexData[3] = z * ((wt[1] * w0) + (wt[4] * h1) + wt[7]);\n\n\t\tz = 1.0 / (wt[2] * w0 + wt[5] * h0 + wt[8]);\n\t\tvertexData[4] = z * ((wt[0] * w0) + (wt[3] * h0) + wt[6]);\n\t\tvertexData[5] = z * ((wt[1] * w0) + (wt[4] * h0) + wt[7]);\n\n\t\tz = 1.0 / (wt[2] * w1 + wt[5] * h0 + wt[8]);\n\t\tvertexData[6] = z * ((wt[0] * w1) + (wt[3] * h0) + wt[6]);\n\t\tvertexData[7] = z * ((wt[1] * w1) + (wt[4] * h0) + wt[7]);\n\t}\n\n\ttoLocal<T extends IPoint>(position: IPoint, from?: DisplayObject,\n\t\t\t\t\t\t\t\t\tpoint?: T, skipUpdate?: boolean,\n\t\t\t\t\t\t\t\t\tstep = TRANSFORM_STEP.ALL): T {\n\t\treturn container2dToLocal.call(this, position, from, point, skipUpdate, step);\n\t}\n\n\tget worldTransform() {\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t}\n}\n","/// <reference path=\"../../types.d.ts\" />\n\nimport { Projection2d } from '../Projection2d';\nimport { Sprite2d } from './Sprite2d';\nimport { Text } from '@pixi/text';\n\nimport type { TextStyle } from '@pixi/text';\n\nexport class Text2d extends Text {\n\tconstructor(text?: string, style?: TextStyle, canvas?: HTMLCanvasElement) {\n\t\tsuper(text, style, canvas);\n\t\tthis.proj = new Projection2d(this.transform);\n\t\tthis.pluginName = 'batch2d';\n\t}\n\n\tproj: Projection2d;\n\tvertexData2d: Float32Array = null;\n\n\tget worldTransform() {\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t}\n}\n\nText2d.prototype.calculateVertices = Sprite2d.prototype.calculateVertices;\n(Text2d.prototype as any).calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\n(Text2d.prototype as any)._calculateBounds = Sprite2d.prototype._calculateBounds;","/// <reference path=\"../../types.d.ts\" />\n\nimport { DisplayObject } from '@pixi/display';\nimport { Renderer, Texture } from '@pixi/core';\nimport { Projection2d } from '../Projection2d';\nimport { TilingSprite } from '@pixi/sprite-tiling';\nimport { Transform } from '@pixi/math';\nimport { TRANSFORM_STEP } from '../../constants';\nimport { container2dToLocal } from '../Container2d';\n\nimport type { IPoint } from '@pixi/math';\n\nconst tempTransform = new Transform();\n\nexport const TilingSprite2d: typeof TilingSprite = !TilingSprite ? null : class TilingSprite2d extends TilingSprite {\n\tconstructor(texture: Texture, width: number, height: number) {\n\t\tsuper(texture, width, height);\n\n\t\tthis.tileProj = new Projection2d(this.tileTransform);\n\t\tthis.tileProj.reverseLocalOrder = true;\n\t\tthis.proj = new Projection2d(this.transform);\n\n\t\tthis.pluginName = 'tilingSprite2d';\n\t\tthis.uvRespectAnchor = true;\n\t}\n\n\ttileProj: Projection2d;\n\tproj: Projection2d;\n\n\tget worldTransform() {\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t}\n\n\ttoLocal<T extends IPoint>(position: IPoint, from?: DisplayObject,\n\t\t\t\t\t\t\t\t\t\tpoint?: T, skipUpdate?: boolean,\n\t\t\t\t\t\t\t\t\t\tstep = TRANSFORM_STEP.ALL): T {\n\t\treturn container2dToLocal.call(this, position, from, point, skipUpdate, step);\n\t}\n\n\t_render(renderer: Renderer)\n\t{\n\t\t// tweak our texture temporarily..\n\t\tconst texture = this._texture;\n\n\t\tif (!texture || !texture.valid)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// changed\n\t\tthis.tileTransform.updateTransform(tempTransform);\n\t\tthis.uvMatrix.update();\n\n\t\trenderer.batch.setObjectRenderer((renderer.plugins as any)[this.pluginName]);\n\t\t(renderer.plugins as any)[this.pluginName].render(this);\n\t}\n}\n","import { Filter, RenderTexture, TextureMatrix, systems } from '@pixi/core';\nimport { Matrix2d } from '../Matrix2d';\nimport spriteMaskVert from './sprite-mask.vert';\nimport spriteMaskFrag from './sprite-mask.frag';\n\nimport type { Projection2d } from '../Projection2d';\nimport type { Sprite } from '@pixi/sprite';\n\nconst tempMat = new Matrix2d();\n\nexport class SpriteMaskFilter2d extends Filter {\n\tconstructor(sprite: Sprite) {\n\t\tsuper(spriteMaskVert, spriteMaskFrag);\n\n\t\tsprite.renderable = false;\n\n\t\tthis.maskSprite = sprite;\n\t}\n\n\tmaskSprite: Sprite;\n\tmaskMatrix = new Matrix2d();\n\n\tapply(filterManager: systems.FilterSystem, input: RenderTexture, output: RenderTexture,\n\t\t\tclearMode?: boolean) {\n\t\tconst maskSprite = this.maskSprite;\n\t\tconst tex = this.maskSprite.texture;\n\n\t\tif (!tex.valid)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif (!tex.uvMatrix)\n\t\t{\n\t\t\t// margin = 0.0, let it bleed a bit, shader code becomes easier\n\t\t\t// assuming that atlas textures were made with 1-pixel padding\n\t\t\ttex.uvMatrix = new TextureMatrix(tex, 0.0);\n\t\t}\n\t\ttex.uvMatrix.update();\n\n\t\tthis.uniforms.npmAlpha = tex.baseTexture.alphaMode ? 0.0 : 1.0;\n\t\tthis.uniforms.mask = maskSprite.texture;\n\t\tthis.uniforms.otherMatrix = SpriteMaskFilter2d.calculateSpriteMatrix(input, this.maskMatrix, maskSprite)\n\t\t\t.prepend(tex.uvMatrix.mapCoord);\n\t\tthis.uniforms.alpha = maskSprite.worldAlpha;\n\t\tthis.uniforms.maskClamp = tex.uvMatrix.uClampFrame;\n\n\t\tfilterManager.applyFilter(this, input, output, clearMode);\n\t}\n\n\tstatic calculateSpriteMatrix(input: RenderTexture, mappedMatrix: Matrix2d, sprite: Sprite) {\n\t\tlet proj = (sprite as any).proj as Projection2d;\n\n\t\tconst filterArea = (input as any).filterFrame;\n\n\t\tconst worldTransform = proj && !proj._affine ? proj.world.copyTo2dOr3d(tempMat) : tempMat.copyFrom(sprite.transform.worldTransform);\n\t\tconst texture = sprite.texture.orig;\n\n\t\tmappedMatrix.set(input.width, 0, 0, input.height, filterArea.x, filterArea.y);\n\t\tworldTransform.invert();\n\t\tmappedMatrix.setToMult(worldTransform, mappedMatrix);\n\t\tmappedMatrix.scaleAndTranslate(1.0 / texture.width, 1.0 / texture.height,\n\t\t\tsprite.anchor.x, sprite.anchor.y);\n\n\t\treturn mappedMatrix;\n\t}\n}\n","/// <reference path=\"../../types.d.ts\" />\n/// <reference path=\"../../../global.d.ts\" />\n\nimport { Container } from '@pixi/display';\nimport { Program } from '@pixi/core';\nimport { Sprite } from '@pixi/sprite';\nimport { Sprite2d } from './Sprite2d';\nimport { Mesh2d } from '../mesh/Mesh2d';\nimport { MeshMaterial } from '@pixi/mesh';\nimport { SimpleMesh, SimpleRope } from '@pixi/mesh-extras';\n\nimport { Projection2d } from '../Projection2d';\nimport { Container2d, container2dWorldTransform } from '../Container2d';\n\nfunction convertTo2d(this: Container | Sprite) {\n\tconst _this = this as Container2d;\n\t\n\tif (_this.proj) return;\n\n\t_this.proj = new Projection2d(this.transform);\n\t_this.toLocal = Container2d.prototype.toLocal;\n\n\tObject.defineProperty(this, \"worldTransform\", {\n\t\tget: container2dWorldTransform,\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n}\n\n\nContainer.prototype.convertTo2d = convertTo2d;\n\nSprite.prototype.convertTo2d = function () {\n\tif (this.proj) return;\n\tthis.calculateVertices = Sprite2d.prototype.calculateVertices;\n\tthis.calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\n\tthis._calculateBounds = Sprite2d.prototype._calculateBounds;\n\tthis.pluginName = 'batch2d';\n\tconvertTo2d.call(this);\n};\n\nContainer.prototype.convertSubtreeTo2d = function () {\n\tthis.convertTo2d();\n\tfor (let i = 0; i < this.children.length; i++) {\n\t\tthis.children[i].convertSubtreeTo2d();\n\t}\n};\n\nif (SimpleMesh) {\n\tSimpleMesh.prototype.convertTo2d =\n\t\tSimpleRope.prototype.convertTo2d =\n\t\t\tfunction () {\n\t\t\t\tif (this.proj) return;\n\t\t\t\tthis.calculateVertices = Mesh2d.prototype.calculateVertices;\n\t\t\t\tthis._renderDefault = Mesh2d.prototype._renderDefault;\n\t\t\t\tif (this.material.pluginName !== 'batch2d') {\n\t\t\t\t\tthis.material = new MeshMaterial(this.material.texture, {\n\t\t\t\t\t\tprogram: Program.from(Mesh2d.defaultVertexShader, Mesh2d.defaultFragmentShader),\n\t\t\t\t\t\tpluginName: 'batch2d'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconvertTo2d.call(this);\n\t\t\t};\n}","import * as utils from '@pixi/utils';\nimport { Matrix2d } from '../Matrix2d'\nimport { ObjectRenderer, QuadUv, Shader, Renderer } from '@pixi/core';\nimport { DRAW_MODES, WRAP_MODES } from '@pixi/constants';\nimport shaderVert from './tiling-sprite.vert';\nimport shaderFrag from './tiling-sprite.frag';\nimport shaderSimpleFrag from './tiling-sprite-simple.frag';\n\n// changed\nconst tempMat = new Matrix2d();\n\nexport class TilingSprite2dRenderer extends ObjectRenderer\n{\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        const uniforms = { globals: this.renderer.globalUniforms };\n\n        this.shader = Shader.from(shaderVert, shaderFrag, uniforms);\n\n        this.simpleShader = Shader.from(shaderVert, shaderSimpleFrag, uniforms);\n    }\n\n    shader: Shader;\n    simpleShader: Shader;\n    quad = new QuadUv();\n\n    render(ts: any)\n    {\n        const renderer = this.renderer;\n        const quad = this.quad;\n\n        let vertices = quad.vertices;\n\n        vertices[0] = vertices[6] = (ts._width) * -ts.anchor.x;\n        vertices[1] = vertices[3] = ts._height * -ts.anchor.y;\n\n        vertices[2] = vertices[4] = (ts._width) * (1.0 - ts.anchor.x);\n        vertices[5] = vertices[7] = ts._height * (1.0 - ts.anchor.y);\n\n        if (ts.uvRespectAnchor)\n        {\n            vertices = quad.uvs;\n\n            vertices[0] = vertices[6] = -ts.anchor.x;\n            vertices[1] = vertices[3] = -ts.anchor.y;\n\n            vertices[2] = vertices[4] = 1.0 - ts.anchor.x;\n            vertices[5] = vertices[7] = 1.0 - ts.anchor.y;\n        }\n\n        quad.invalidate();\n\n        const tex = ts._texture;\n        const baseTex = tex.baseTexture;\n        const lt = ts.tileProj.world;\n        const uv = ts.uvMatrix;\n        let isSimple = baseTex.isPowerOfTwo\n            && tex.frame.width === baseTex.width && tex.frame.height === baseTex.height;\n\n        // auto, force repeat wrapMode for big tiling textures\n        if (isSimple)\n        {\n            if (!baseTex._glTextures[(renderer as any).CONTEXT_UID])\n            {\n                if (baseTex.wrapMode === WRAP_MODES.CLAMP)\n                {\n                    baseTex.wrapMode = WRAP_MODES.REPEAT;\n                }\n            }\n            else\n            {\n                isSimple = baseTex.wrapMode !== WRAP_MODES.CLAMP;\n            }\n        }\n\n        const shader = isSimple ? this.simpleShader : this.shader;\n\n        // changed\n        tempMat.identity();\n        tempMat.scale(tex.width, tex.height);\n        tempMat.prepend(lt);\n        tempMat.scale(1.0 / ts._width, 1.0 / ts._height);\n\n        tempMat.invert();\n        if (isSimple)\n        {\n            tempMat.prepend(uv.mapCoord);\n        }\n        else\n        {\n            shader.uniforms.uMapCoord = uv.mapCoord.toArray(true);\n            shader.uniforms.uClampFrame = uv.uClampFrame;\n            shader.uniforms.uClampOffset = uv.uClampOffset;\n        }\n\n        shader.uniforms.uTransform = tempMat.toArray(true);\n        shader.uniforms.uColor = utils.premultiplyTintToRgba(ts.tint, ts.worldAlpha,\n            shader.uniforms.uColor, baseTex.premultiplyAlpha);\n        shader.uniforms.translationMatrix = ts.transform.worldTransform.toArray(true);\n        shader.uniforms.uSampler = tex;\n\n        renderer.shader.bind(shader, false);\n        renderer.geometry.bind(quad as any, undefined);// , renderer.shader.getGLShader());\n\n        renderer.state.setBlendMode(utils.correctBlendMode(ts.blendMode, baseTex.premultiplyAlpha));\n        renderer.geometry.draw(DRAW_MODES.TRIANGLES, 6, 0);\n    }\n}\n\nRenderer.registerPlugin('tilingSprite2d', TilingSprite2dRenderer as any);\n","/// <reference path=\"../../types.d.ts\" />\n\nimport { MaskData, systems } from '@pixi/core';\nimport { SpriteMaskFilter2d } from './SpriteMaskFilter';\n\nimport type { Sprite } from '@pixi/sprite';\n\nsystems.MaskSystem.prototype.pushSpriteMask =  function(maskData: MaskData): void {\n\tconst { maskObject } = maskData;\n\tconst target = (maskData as any)._target;\n\n\tlet alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\n\n\tif (!alphaMaskFilter) {\n\t\talphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new SpriteMaskFilter2d(maskObject as Sprite)];\n\t}\n\n\talphaMaskFilter[0].resolution = this.renderer.resolution;\n\talphaMaskFilter[0].maskSprite = maskObject;\n\n\tconst stashFilterArea = target.filterArea;\n\n\ttarget.filterArea = maskObject.getBounds(true);\n\tthis.renderer.filter.push(target, alphaMaskFilter);\n\ttarget.filterArea = stashFilterArea;\n\n\tthis.alphaMaskIndex++;\n}\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Point, ObservablePoint } from '@pixi/math';\n\nimport type { IPoint } from '@pixi/math';\n\nexport interface IPoint3d {\n\tx: number;\n\ty: number;\n\tz: number;\n}\n\nexport class Point3d extends Point {\n\tpublic z: number;\n\n\tconstructor(x?: number, y?: number, z?: number) {\n\t\tsuper(x, y);\n\t\tthis.z = z;\n\t}\n\n\tset(x?: number, y?: number, z?: number) {\n\t\tthis.x = x || 0;\n\t\tthis.y = (y === undefined) ? this.x : (y || 0);\n\t\tthis.z = (y === undefined) ? this.x : (z || 0);\n\t\treturn this;\n\t}\n\n\tcopyFrom(p: IPoint) {\n\t\tthis.set(p.x, p.y, (p as Point3d).z || 0);\n\t\treturn this;\n\t}\n\n\tcopyTo(p: Point3d) {\n\t\tp.set(this.x, this.y, this.z);\n\t\treturn p;\n\t}\n}\n\nexport class ObservablePoint3d extends ObservablePoint {\n\t_x: number;\n\t_y: number;\n\t_z: number = 0;\n\n\tscope: any;\n\tcb: any;\n\n\tget z() {\n\t\treturn this._z;\n\t}\n\n\tset z(value) {\n\t\tif (this._z !== value) {\n\t\t\tthis._z = value;\n\t\t\tthis.cb.call(this.scope);\n\t\t}\n\t}\n\n\tset(x?: number, y?: number, z?: number) {\n\t\tconst _x = x || 0;\n\t\tconst _y = (y === undefined) ? _x : (y || 0);\n\t\tconst _z = (y === undefined) ? _x : (z || 0);\n\n\t\tif (this._x !== _x || this._y !== _y || this._z !== _z) {\n\t\t\tthis._x = _x;\n\t\t\tthis._y = _y;\n\t\t\tthis._z = _z;\n\t\t\tthis.cb.call(this.scope);\n\t\t}\n\t\treturn this;\n\t}\n\n\tcopyFrom(p: Point3d | IPoint3d | IPoint) {\n\t\tthis.set(p.x, p.y, (p as any).z || 0);\n\t\treturn this;\n\t}\n\n\tcopyTo(p: IPoint) {\n\t\t(p as Point3d).set(this._x, this._y, this._z);\n\t\treturn p;\n\t}\n}\n","// according to https://jsperf.com/obj-vs-array-view-access/1 , Float64Array is the best here\n/// <reference path=\"../types.d.ts\" />\n\nimport { AFFINE } from '../constants';\nimport { Matrix2d } from '../proj2d/Matrix2d';\nimport { Point3d } from './Point3d';\n\nimport type { IPoint3d } from './Point3d';\nimport type { Matrix } from '@pixi/math';\n\nconst mat4id = [1, 0, 0, 0,\n\t0, 1, 0, 0,\n\t0, 0, 1, 0,\n\t0, 0, 0, 1];\n\nexport class Matrix3d {\n\t/**\n\t * A default (identity) matrix\n\t *\n\t * @static\n\t * @const\n\t */\n\tstatic readonly IDENTITY = new Matrix3d();\n\n\t/**\n\t * A temp matrix\n\t *\n\t * @static\n\t * @const\n\t */\n\tstatic readonly TEMP_MATRIX = new Matrix3d();\n\n\t/**\n\t * mat4 implementation through array of 16 elements\n\t */\n\tmat4: Float64Array;\n\n\tfloatArray: Float32Array = null;\n\n\t_dirtyId: number = 0;\n\t_updateId: number = -1;\n\t_mat4inv: Float64Array = null;\n\tcacheInverse: boolean = false;\n\n\tconstructor(backingArray?: ArrayLike<number>) {\n\t\tthis.mat4 = new Float64Array(backingArray || mat4id);\n\t}\n\n\tget a() {\n\t\treturn this.mat4[0] / this.mat4[15];\n\t}\n\n\tget b() {\n\t\treturn this.mat4[1] / this.mat4[15];\n\t}\n\n\tget c() {\n\t\treturn this.mat4[4] / this.mat4[15];\n\t}\n\n\tget d() {\n\t\treturn this.mat4[5] / this.mat4[15];\n\t}\n\n\tget tx() {\n\t\treturn this.mat4[12] / this.mat4[15];\n\t}\n\n\tget ty() {\n\t\treturn this.mat4[13] / this.mat4[15];\n\t}\n\n\tset a(value: number) {\n\t\tthis.mat4[0] = value * this.mat4[15];\n\t}\n\n\tset b(value: number) {\n\t\tthis.mat4[1] = value * this.mat4[15];\n\t}\n\n\tset c(value: number) {\n\t\tthis.mat4[4] = value * this.mat4[15];\n\t}\n\n\tset d(value: number) {\n\t\tthis.mat4[5] = value * this.mat4[15];\n\t}\n\n\tset tx(value: number) {\n\t\tthis.mat4[12] = value * this.mat4[15];\n\t}\n\n\tset ty(value: number) {\n\t\tthis.mat4[13] = value * this.mat4[15];\n\t}\n\n\tset(a: number, b: number, c: number, d: number, tx: number, ty: number) {\n\t\tlet mat4 = this.mat4;\n\t\tmat4[0] = a;\n\t\tmat4[1] = b;\n\t\tmat4[2] = 0;\n\t\tmat4[3] = 0;\n\t\tmat4[4] = c;\n\t\tmat4[5] = d;\n\t\tmat4[6] = 0;\n\t\tmat4[7] = 0;\n\t\tmat4[8] = 0;\n\t\tmat4[9] = 0;\n\t\tmat4[10] = 1;\n\t\tmat4[11] = 0;\n\t\tmat4[12] = tx;\n\t\tmat4[13] = ty;\n\t\tmat4[14] = 0;\n\t\tmat4[15] = 1;\n\t\treturn this;\n\t}\n\n\ttoArray(transpose?: boolean, out?: Float32Array): Float32Array {\n\t\tif (!this.floatArray) {\n\t\t\tthis.floatArray = new Float32Array(9);\n\t\t}\n\n\t\tconst array = out || this.floatArray;\n\t\tconst mat3 = this.mat4;\n\n\t\tif (transpose) {\n\t\t\tarray[0] = mat3[0];\n\t\t\tarray[1] = mat3[1];\n\t\t\tarray[2] = mat3[3];\n\t\t\tarray[3] = mat3[4];\n\t\t\tarray[4] = mat3[5];\n\t\t\tarray[5] = mat3[7];\n\t\t\tarray[6] = mat3[12];\n\t\t\tarray[7] = mat3[13];\n\t\t\tarray[8] = mat3[15];\n\t\t}\n\t\telse {\n\t\t\t//this branch is NEVER USED in pixi\n\t\t\tarray[0] = mat3[0];\n\t\t\tarray[1] = mat3[4];\n\t\t\tarray[2] = mat3[12];\n\t\t\tarray[3] = mat3[2];\n\t\t\tarray[4] = mat3[6];\n\t\t\tarray[5] = mat3[13];\n\t\t\tarray[6] = mat3[3];\n\t\t\tarray[7] = mat3[7];\n\t\t\tarray[8] = mat3[15];\n\t\t}\n\n\t\treturn array;\n\t}\n\n\tsetToTranslation(tx: number, ty: number, tz: number) {\n\t\tconst mat4 = this.mat4;\n\n\t\tmat4[0] = 1;\n\t\tmat4[1] = 0;\n\t\tmat4[2] = 0;\n\t\tmat4[3] = 0;\n\n\t\tmat4[4] = 0;\n\t\tmat4[5] = 1;\n\t\tmat4[6] = 0;\n\t\tmat4[7] = 0;\n\n\t\tmat4[8] = 0;\n\t\tmat4[9] = 0;\n\t\tmat4[10] = 1;\n\t\tmat4[11] = 0;\n\n\t\tmat4[12] = tx;\n\t\tmat4[13] = ty;\n\t\tmat4[14] = tz;\n\t\tmat4[15] = 1;\n\t}\n\n\tsetToRotationTranslationScale(quat: Float64Array, tx: number, ty: number, tz: number, sx: number, sy: number, sz: number) {\n\t\tconst out = this.mat4;\n\n\t\tlet x = quat[0], y = quat[1], z = quat[2], w = quat[3];\n\t\tlet x2 = x + x;\n\t\tlet y2 = y + y;\n\t\tlet z2 = z + z;\n\n\t\tlet xx = x * x2;\n\t\tlet xy = x * y2;\n\t\tlet xz = x * z2;\n\t\tlet yy = y * y2;\n\t\tlet yz = y * z2;\n\t\tlet zz = z * z2;\n\t\tlet wx = w * x2;\n\t\tlet wy = w * y2;\n\t\tlet wz = w * z2;\n\n\t\tout[0] = (1 - (yy + zz)) * sx;\n\t\tout[1] = (xy + wz) * sx;\n\t\tout[2] = (xz - wy) * sx;\n\t\tout[3] = 0;\n\t\tout[4] = (xy - wz) * sy;\n\t\tout[5] = (1 - (xx + zz)) * sy;\n\t\tout[6] = (yz + wx) * sy;\n\t\tout[7] = 0;\n\t\tout[8] = (xz + wy) * sz;\n\t\tout[9] = (yz - wx) * sz;\n\t\tout[10] = (1 - (xx + yy)) * sz;\n\t\tout[11] = 0;\n\t\tout[12] = tx;\n\t\tout[13] = ty;\n\t\tout[14] = tz;\n\t\tout[15] = 1;\n\n\t\treturn out;\n\t}\n\n\tapply(pos: IPoint3d, newPos: IPoint3d): IPoint3d {\n\t\tnewPos = newPos || new Point3d();\n\n\t\tconst mat4 = this.mat4;\n\t\tconst x = pos.x;\n\t\tconst y = pos.y;\n\t\tconst z = pos.z || 0;\n\n\t\t//TODO: apply for 2d point\n\n\t\tlet w = 1.0 / (mat4[3] * x + mat4[7] * y + mat4[11] * z + mat4[15]);\n\t\tnewPos.x = w * (mat4[0] * x + mat4[4] * y + mat4[8] * z + mat4[12]);\n\t\tnewPos.y = w * (mat4[1] * x + mat4[5] * y + mat4[9] * z + mat4[13]);\n\t\tnewPos.z = w * (mat4[2] * x + mat4[6] * y + mat4[10] * z + mat4[14]);\n\n\t\treturn newPos;\n\t}\n\n\ttranslate(tx: number, ty: number, tz: number) {\n\t\tconst a = this.mat4;\n\n\t\ta[12] = a[0] * tx + a[4] * ty + a[8] * tz + a[12];\n\t\ta[13] = a[1] * tx + a[5] * ty + a[9] * tz + a[13];\n\t\ta[14] = a[2] * tx + a[6] * ty + a[10] * tz + a[14];\n\t\ta[15] = a[3] * tx + a[7] * ty + a[11] * tz + a[15];\n\n\t\treturn this;\n\t}\n\n\tscale(x: number, y: number, z?: number) {\n\t\tconst mat4 = this.mat4;\n\t\tmat4[0] *= x;\n\t\tmat4[1] *= x;\n\t\tmat4[2] *= x;\n\t\tmat4[3] *= x;\n\n\t\tmat4[4] *= y;\n\t\tmat4[5] *= y;\n\t\tmat4[6] *= y;\n\t\tmat4[7] *= y;\n\n\t\tif (z !== undefined) {\n\t\t\tmat4[8] *= z;\n\t\t\tmat4[9] *= z;\n\t\t\tmat4[10] *= z;\n\t\t\tmat4[11] *= z;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tscaleAndTranslate(scaleX: number, scaleY: number, scaleZ: number, tx: number, ty: number, tz: number) {\n\t\tconst mat4 = this.mat4;\n\t\tmat4[0] = scaleX * mat4[0] + tx * mat4[3];\n\t\tmat4[1] = scaleY * mat4[1] + ty * mat4[3];\n\t\tmat4[2] = scaleZ * mat4[2] + tz * mat4[3];\n\n\t\tmat4[4] = scaleX * mat4[4] + tx * mat4[7];\n\t\tmat4[5] = scaleY * mat4[5] + ty * mat4[7];\n\t\tmat4[6] = scaleZ * mat4[6] + tz * mat4[7];\n\n\t\tmat4[8] = scaleX * mat4[8] + tx * mat4[11];\n\t\tmat4[9] = scaleY * mat4[9] + ty * mat4[11];\n\t\tmat4[10] = scaleZ * mat4[10] + tz * mat4[11];\n\n\t\tmat4[12] = scaleX * mat4[12] + tx * mat4[15];\n\t\tmat4[13] = scaleY * mat4[13] + ty * mat4[15];\n\t\tmat4[14] = scaleZ * mat4[14] + tz * mat4[15];\n\t}\n\n\t//TODO: remove props\n\tapplyInverse(pos: IPoint3d, newPos: IPoint3d): IPoint3d {\n\t\tnewPos = newPos || new Point3d();\n\t\tif (!this._mat4inv) {\n\t\t\tthis._mat4inv = new Float64Array(16);\n\t\t}\n\n\t\tconst mat4 = this._mat4inv;\n\t\tconst a = this.mat4;\n\t\tconst x = pos.x;\n\t\tconst y = pos.y;\n\t\tlet z = pos.z || 0;\n\n\t\tif (!this.cacheInverse || this._updateId !== this._dirtyId) {\n\t\t\tthis._updateId = this._dirtyId;\n\t\t\tMatrix3d.glMatrixMat4Invert(mat4, a);\n\t\t}\n\n\t\tlet w1 = 1.0 / (mat4[3] * x + mat4[7] * y + mat4[11] * z + mat4[15]);\n\t\tconst x1 = w1 * (mat4[0] * x + mat4[4] * y + mat4[8] * z + mat4[12]);\n\t\tconst y1 = w1 * (mat4[1] * x + mat4[5] * y + mat4[9] * z + mat4[13]);\n\t\tconst z1 = w1 * (mat4[2] * x + mat4[6] * y + mat4[10] * z + mat4[14]);\n\n\t\tz += 1.0;\n\n\t\tlet w2 = 1.0 / (mat4[3] * x + mat4[7] * y + mat4[11] * z + mat4[15]);\n\t\tconst x2 = w2 * (mat4[0] * x + mat4[4] * y + mat4[8] * z + mat4[12]);\n\t\tconst y2 = w2 * (mat4[1] * x + mat4[5] * y + mat4[9] * z + mat4[13]);\n\t\tconst z2 = w2 * (mat4[2] * x + mat4[6] * y + mat4[10] * z + mat4[14]);\n\n\t\tif (Math.abs(z1-z2)<1e-10) {\n\t\t\t(newPos as Point3d).set(NaN, NaN, 0);\n\t\t}\n\n\t\tconst alpha = (0-z1) / (z2-z1);\n\t\t(newPos as Point3d).set( (x2-x1)*alpha + x1, (y2-y1)*alpha + y1, 0.0);\n\t\treturn newPos;\n\t}\n\n\tinvert(): Matrix3d {\n\t\tMatrix3d.glMatrixMat4Invert(this.mat4, this.mat4);\n\t\treturn this;\n\t}\n\n\tinvertCopyTo(matrix: Matrix3d) {\n\t\tif (!this._mat4inv) {\n\t\t\tthis._mat4inv = new Float64Array(16);\n\t\t}\n\n\t\tconst mat4 = this._mat4inv;\n\t\tconst a = this.mat4;\n\n\t\tif (!this.cacheInverse || this._updateId !== this._dirtyId) {\n\t\t\tthis._updateId = this._dirtyId;\n\t\t\tMatrix3d.glMatrixMat4Invert(mat4, a);\n\t\t}\n\n\t\tmatrix.mat4.set(mat4);\n\t}\n\n\tidentity(): Matrix3d {\n\t\tconst mat3 = this.mat4;\n\t\tmat3[0] = 1;\n\t\tmat3[1] = 0;\n\t\tmat3[2] = 0;\n\t\tmat3[3] = 0;\n\n\t\tmat3[4] = 0;\n\t\tmat3[5] = 1;\n\t\tmat3[6] = 0;\n\t\tmat3[7] = 0;\n\n\t\tmat3[8] = 0;\n\t\tmat3[9] = 0;\n\t\tmat3[10] = 1;\n\t\tmat3[11] = 0;\n\n\t\tmat3[12] = 0;\n\t\tmat3[13] = 0;\n\t\tmat3[14] = 0;\n\t\tmat3[15] = 1;\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\treturn new Matrix3d(this.mat4);\n\t}\n\n\tcopyTo3d(matrix: Matrix3d) {\n\t\tconst mat3 = this.mat4;\n\t\tconst ar2 = matrix.mat4;\n\t\tar2[0] = mat3[0];\n\t\tar2[1] = mat3[1];\n\t\tar2[2] = mat3[2];\n\t\tar2[3] = mat3[3];\n\t\tar2[4] = mat3[4];\n\t\tar2[5] = mat3[5];\n\t\tar2[6] = mat3[6];\n\t\tar2[7] = mat3[7];\n\t\tar2[8] = mat3[8];\n\t\treturn matrix;\n\t}\n\n\tcopyTo2d(matrix: Matrix2d) {\n\t\tconst mat3 = this.mat4;\n\t\tconst ar2 = matrix.mat3;\n\t\tar2[0] = mat3[0];\n\t\tar2[1] = mat3[1];\n\t\tar2[2] = mat3[3];\n\t\tar2[3] = mat3[4];\n\t\tar2[4] = mat3[5];\n\t\tar2[5] = mat3[7];\n\t\tar2[6] = mat3[12];\n\t\tar2[7] = mat3[13];\n\t\tar2[8] = mat3[15];\n\t\treturn matrix;\n\t}\n\n\tcopyTo2dOr3d(matrix: Matrix2d | Matrix3d) {\n\t\tif (matrix instanceof Matrix2d) {\n\t\t\treturn this.copyTo2d(matrix);\n\t\t} else {\n\t\t\treturn this.copyTo3d(matrix);\n\t\t}\n\t}\n\n\t/**\n\t * legacy method, change the values of given pixi matrix\n\t * @param matrix\n\t * @return matrix\n\t */\n\tcopyTo(matrix: Matrix, affine?: AFFINE, preserveOrientation?: boolean) {\n\t\tconst mat3 = this.mat4;\n\t\tconst d = 1.0 / mat3[15];\n\t\tconst tx = mat3[12] * d, ty = mat3[13] * d;\n\t\tmatrix.a = (mat3[0] - mat3[3] * tx) * d;\n\t\tmatrix.b = (mat3[1] - mat3[3] * ty) * d;\n\t\tmatrix.c = (mat3[4] - mat3[7] * tx) * d;\n\t\tmatrix.d = (mat3[5] - mat3[7] * ty) * d;\n\t\tmatrix.tx = tx;\n\t\tmatrix.ty = ty;\n\n\t\tif (affine >= 2) {\n\t\t\tlet D = matrix.a * matrix.d - matrix.b * matrix.c;\n\t\t\tif (!preserveOrientation) {\n\t\t\t\tD = Math.abs(D);\n\t\t\t}\n\t\t\tif (affine === AFFINE.POINT) {\n\t\t\t\tif (D > 0) {\n\t\t\t\t\tD = 1;\n\t\t\t\t} else D = -1;\n\t\t\t\tmatrix.a = D;\n\t\t\t\tmatrix.b = 0;\n\t\t\t\tmatrix.c = 0;\n\t\t\t\tmatrix.d = D;\n\t\t\t} else if (affine === AFFINE.AXIS_X) {\n\t\t\t\tD /= Math.sqrt(matrix.b * matrix.b + matrix.d * matrix.d);\n\t\t\t\tmatrix.c = 0;\n\t\t\t\tmatrix.d = D;\n\t\t\t} else if (affine === AFFINE.AXIS_Y) {\n\t\t\t\tD /= Math.sqrt(matrix.a * matrix.a + matrix.c * matrix.c);\n\t\t\t\tmatrix.a = D;\n\t\t\t\tmatrix.c = 0;\n\t\t\t}\n\t\t}\n\t\treturn matrix;\n\t}\n\n\t/**\n\t * legacy method, change the values of given pixi matrix\n\t * @param matrix\n\t * @return\n\t */\n\tcopyFrom(matrix: Matrix) {\n\t\tconst mat3 = this.mat4;\n\t\tmat3[0] = matrix.a;\n\t\tmat3[1] = matrix.b;\n\t\tmat3[2] = 0;\n\t\tmat3[3] = 0;\n\n\t\tmat3[4] = matrix.c;\n\t\tmat3[5] = matrix.d;\n\t\tmat3[6] = 0;\n\t\tmat3[7] = 0;\n\n\t\tmat3[8] = 0;\n\t\tmat3[9] = 0;\n\t\tmat3[10] = 1;\n\t\tmat3[11] = 0;\n\n\t\tmat3[12] = matrix.tx;\n\t\tmat3[13] = matrix.ty;\n\t\tmat3[14] = 0;\n\t\tmat3[15] = 1;\n\n\t\tthis._dirtyId++;\n\t\treturn this;\n\t}\n\n\tsetToMultLegacy(pt: Matrix, lt: Matrix3d) {\n\t\tconst out = this.mat4;\n\t\tconst b = lt.mat4;\n\n\t\tconst a00 = pt.a, a01 = pt.b,\n\t\t\ta10 = pt.c, a11 = pt.d,\n\t\t\ta30 = pt.tx, a31 = pt.ty;\n\n\t\tlet b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n\n\t\tout[0] = b0 * a00 + b1 * a10 + b3 * a30;\n\t\tout[1] = b0 * a01 + b1 * a11 + b3 * a31;\n\t\tout[2] = b2;\n\t\tout[3] = b3;\n\n\t\tb0 = b[4];\n\t\tb1 = b[5];\n\t\tb2 = b[6];\n\t\tb3 = b[7];\n\t\tout[4] = b0 * a00 + b1 * a10 + b3 * a30;\n\t\tout[5] = b0 * a01 + b1 * a11 + b3 * a31;\n\t\tout[6] = b2;\n\t\tout[7] = b3;\n\n\t\tb0 = b[8];\n\t\tb1 = b[9];\n\t\tb2 = b[10];\n\t\tb3 = b[11];\n\t\tout[8] = b0 * a00 + b1 * a10 + b3 * a30;\n\t\tout[9] = b0 * a01 + b1 * a11 + b3 * a31;\n\t\tout[10] = b2;\n\t\tout[11] = b3;\n\n\t\tb0 = b[12];\n\t\tb1 = b[13];\n\t\tb2 = b[14];\n\t\tb3 = b[15];\n\t\tout[12] = b0 * a00 + b1 * a10 + b3 * a30;\n\t\tout[13] = b0 * a01 + b1 * a11 + b3 * a31;\n\t\tout[14] = b2;\n\t\tout[15] = b3;\n\n\t\tthis._dirtyId++;\n\t\treturn this;\n\t}\n\n\tsetToMultLegacy2(pt: Matrix3d, lt: Matrix) {\n\t\tconst out = this.mat4;\n\t\tconst a = pt.mat4;\n\n\t\tconst a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n\t\tconst a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n\n\t\tconst b00 = lt.a, b01 = lt.b,\n\t\t\tb10 = lt.c, b11 = lt.d,\n\t\t\tb30 = lt.tx, b31 = lt.ty;\n\n\t\tout[0] = b00 * a00 + b01 * a10;\n\t\tout[1] = b00 * a01 + b01 * a11;\n\t\tout[2] = b00 * a02 + b01 * a12;\n\t\tout[3] = b00 * a03 + b01 * a13;\n\n\t\tout[4] = b10 * a00 + b11 * a10;\n\t\tout[5] = b10 * a01 + b11 * a11;\n\t\tout[6] = b10 * a02 + b11 * a12;\n\t\tout[7] = b10 * a03 + b11 * a13;\n\n\t\tout[8] = a[8];\n\t\tout[9] = a[9];\n\t\tout[10] = a[10];\n\t\tout[11] = a[11];\n\n\t\tout[12] = b30 * a00 + b31 * a10 + a[12];\n\t\tout[13] = b30 * a01 + b31 * a11 + a[13];\n\t\tout[14] = b30 * a02 + b31 * a12 + a[14];\n\t\tout[15] = b30 * a03 + b31 * a13 + a[15];\n\n\t\tthis._dirtyId++;\n\t\treturn this;\n\t}\n\n\t// that's transform multiplication we use\n\tsetToMult(pt: Matrix3d, lt: Matrix3d) {\n\t\tMatrix3d.glMatrixMat4Multiply(this.mat4, pt.mat4, lt.mat4);\n\n\t\tthis._dirtyId++;\n\t\treturn this;\n\t}\n\n\tprepend(lt: any) {\n\t\tif (lt.mat4) {\n\t\t\tthis.setToMult(lt, this);\n\t\t} else {\n\t\t\tthis.setToMultLegacy(lt, this);\n\t\t}\n\t}\n\n\tstatic glMatrixMat4Invert(out: Float64Array, a: Float64Array) {\n\t\tlet a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n\t\tlet a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n\t\tlet a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n\t\tlet a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n\t\tlet b00 = a00 * a11 - a01 * a10;\n\t\tlet b01 = a00 * a12 - a02 * a10;\n\t\tlet b02 = a00 * a13 - a03 * a10;\n\t\tlet b03 = a01 * a12 - a02 * a11;\n\t\tlet b04 = a01 * a13 - a03 * a11;\n\t\tlet b05 = a02 * a13 - a03 * a12;\n\t\tlet b06 = a20 * a31 - a21 * a30;\n\t\tlet b07 = a20 * a32 - a22 * a30;\n\t\tlet b08 = a20 * a33 - a23 * a30;\n\t\tlet b09 = a21 * a32 - a22 * a31;\n\t\tlet b10 = a21 * a33 - a23 * a31;\n\t\tlet b11 = a22 * a33 - a23 * a32;\n\n\t\t// Calculate the determinant\n\t\tlet det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n\t\tif (!det) {\n\t\t\treturn null;\n\t\t}\n\t\tdet = 1.0 / det;\n\n\t\tout[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t\tout[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t\tout[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t\tout[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n\t\tout[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t\tout[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t\tout[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t\tout[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n\t\tout[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\t\tout[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\t\tout[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t\tout[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n\t\tout[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n\t\tout[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n\t\tout[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n\t\tout[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n\t\treturn out;\n\t}\n\n\tstatic glMatrixMat4Multiply(out: Float64Array, a: Float64Array, b: Float64Array) {\n\t\tlet a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n\t\tlet a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n\t\tlet a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n\t\tlet a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n\t\t// Cache only the current line of the second matrix\n\t\tlet b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n\t\tout[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t\tout[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t\tout[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t\tout[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n\t\tb0 = b[4];\n\t\tb1 = b[5];\n\t\tb2 = b[6];\n\t\tb3 = b[7];\n\t\tout[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t\tout[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t\tout[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t\tout[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n\t\tb0 = b[8];\n\t\tb1 = b[9];\n\t\tb2 = b[10];\n\t\tb3 = b[11];\n\t\tout[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t\tout[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t\tout[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t\tout[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n\t\tb0 = b[12];\n\t\tb1 = b[13];\n\t\tb2 = b[14];\n\t\tb3 = b[15];\n\t\tout[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t\tout[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t\tout[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t\tout[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\t\treturn out;\n\t}\n}\n","import type { IEuler } from './ObservableEuler';\n\n/**\n * The Euler angles, order is YZX. Except for projections (camera.lookEuler), its reversed XZY\n * @class\n * @namespace PIXI.projection\n * @param x pitch\n * @param y yaw\n * @param z roll\n * @constructor\n */\nexport class Euler {\n\tconstructor(x?: number, y?: number, z?: number) {\n\t\t/**\n\t\t * @member {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._x = x || 0;\n\n\t\t/**\n\t\t * @member {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._y = y || 0;\n\n\t\t/**\n\t\t * @member {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._z = z || 0;\n\n\t\tthis.quaternion = new Float64Array(4);\n\t\tthis.quaternion[3] = 1;\n\n\t\tthis.update();\n\t}\n\n\t_quatUpdateId = -1;\n\t_quatDirtyId = 0;\n\n\tquaternion: Float64Array;\n\n\t_x: number;\n\t_y: number;\n\t_z: number;\n\t_sign: number = 1;\n\n\tget x() {\n\t\treturn this._x;\n\t}\n\n\tset x(value: number) {\n\t\tif (this._x !== value) {\n\t\t\tthis._x = value;\n\t\t\tthis._quatDirtyId++;\n\t\t}\n\t}\n\n\tget y() {\n\t\treturn this._y;\n\t}\n\n\tset y(value: number) {\n\t\tif (this._y !== value) {\n\t\t\tthis._y = value;\n\t\t\tthis._quatDirtyId++;\n\t\t}\n\t}\n\n\tget z() {\n\t\treturn this._z;\n\t}\n\n\tset z(value: number) {\n\t\tif (this._z !== value) {\n\t\t\tthis._z = value;\n\t\t\tthis._quatDirtyId++;\n\t\t}\n\t}\n\n\tget pitch() {\n\t\treturn this._x;\n\t}\n\n\tset pitch(value: number) {\n\t\tif (this._x !== value) {\n\t\t\tthis._x = value;\n\t\t\tthis._quatDirtyId++;\n\t\t}\n\t}\n\n\tget yaw() {\n\t\treturn this._y;\n\t}\n\n\tset yaw(value: number) {\n\t\tif (this._y !== value) {\n\t\t\tthis._y = value;\n\t\t\tthis._quatDirtyId++;\n\t\t}\n\t}\n\n\tget roll() {\n\t\treturn this._z;\n\t}\n\n\tset roll(value: number) {\n\t\tif (this._z !== value) {\n\t\t\tthis._z = value;\n\t\t\tthis._quatDirtyId++;\n\t\t}\n\t}\n\n\tset(x?: number, y?: number, z?: number) {\n\t\tconst _x = x || 0;\n\t\tconst _y = y || 0;\n\t\tconst _z = z || 0;\n\t\tif (this._x !== _x || this._y !== _y || this._z !== _z) {\n\t\t\tthis._x = _x;\n\t\t\tthis._y = _y;\n\t\t\tthis._z = _z;\n\t\t\tthis._quatDirtyId++;\n\t\t}\n\t};\n\n\tcopyFrom(euler: IEuler) {\n\t\tconst _x = euler.x;\n\t\tconst _y = euler.y;\n\t\tconst _z = euler.z;\n\t\tif (this._x !== _x || this._y !== _y || this._z !== _z) {\n\t\t\tthis._x = _x;\n\t\t\tthis._y = _y;\n\t\t\tthis._z = _z;\n\t\t\tthis._quatDirtyId++;\n\t\t}\n\t}\n\n\tcopyTo(p: IEuler) {\n\t\tp.set(this._x, this._y, this._z);\n\t\treturn p;\n\t}\n\n\tequals(euler: IEuler) {\n\t\treturn this._x === euler.x\n\t\t\t&& this._y === euler.y\n\t\t\t&& this._z === euler.z;\n\t}\n\n\tclone() {\n\t\treturn new Euler(this._x, this._y, this._z);\n\t}\n\n\tupdate() {\n\t\tif (this._quatUpdateId === this._quatDirtyId) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._quatUpdateId = this._quatDirtyId;\n\n\t\tconst c1 = Math.cos(this._x / 2);\n\t\tconst c2 = Math.cos(this._y / 2);\n\t\tconst c3 = Math.cos(this._z / 2);\n\n\t\tconst s = this._sign;\n\t\tconst s1 = s * Math.sin(this._x / 2);\n\t\tconst s2 = s * Math.sin(this._y / 2);\n\t\tconst s3 = s * Math.sin(this._z / 2);\n\n\t\tconst q = this.quaternion;\n\n\t\tq[0] = s1 * c2 * c3 + c1 * s2 * s3;\n\t\tq[1] = c1 * s2 * c3 - s1 * c2 * s3;\n\t\tq[2] = c1 * c2 * s3 + s1 * s2 * c3;\n\t\tq[3] = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\treturn true;\n\t}\n}\n","import { Euler } from './Euler';\n\nexport type IEuler = Euler | ObservableEuler;\n\n/**\n * The Euler angles, order is YZX. Except for projections (camera.lookEuler), its reversed XZY\n * @class\n * @namespace PIXI.projection\n * @param x pitch\n * @param y yaw\n * @param z roll\n * @constructor\n */\nexport class ObservableEuler {\n\tconstructor(public cb: any, public scope: any, x?: number, y?: number, z?: number) {\n\t\t/**\n\t\t * @member {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._x = x || 0;\n\n\t\t/**\n\t\t * @member {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._y = y || 0;\n\n\t\t/**\n\t\t * @member {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._z = z || 0;\n\n\t\tthis.quaternion = new Float64Array(4);\n\t\tthis.quaternion[3] = 1;\n\n\t\tthis.update();\n\t}\n\n\t_quatUpdateId = -1;\n\t_quatDirtyId = 0;\n\n\tquaternion: Float64Array;\n\n\t_x: number;\n\t_y: number;\n\t_z: number;\n\t_sign: number = 1;\n\n\tget x() {\n\t\treturn this._x;\n\t}\n\n\tset x(value: number) {\n\t\tif (this._x !== value) {\n\t\t\tthis._x = value;\n\t\t\tthis._quatDirtyId++;\n\t\t\tthis.cb.call(this.scope);\n\t\t}\n\t}\n\n\tget y() {\n\t\treturn this._y;\n\t}\n\n\tset y(value: number) {\n\t\tif (this._y !== value) {\n\t\t\tthis._y = value;\n\t\t\tthis._quatDirtyId++;\n\t\t\tthis.cb.call(this.scope);\n\t\t}\n\t}\n\n\tget z() {\n\t\treturn this._z;\n\t}\n\n\tset z(value: number) {\n\t\tif (this._z !== value) {\n\t\t\tthis._z = value;\n\t\t\tthis._quatDirtyId++;\n\t\t\tthis.cb.call(this.scope);\n\t\t}\n\t}\n\n\tget pitch() {\n\t\treturn this._x;\n\t}\n\n\tset pitch(value: number) {\n\t\tif (this._x !== value) {\n\t\t\tthis._x = value;\n\t\t\tthis._quatDirtyId++;\n\t\t\tthis.cb.call(this.scope);\n\t\t}\n\t}\n\n\tget yaw() {\n\t\treturn this._y;\n\t}\n\n\tset yaw(value: number) {\n\t\tif (this._y !== value) {\n\t\t\tthis._y = value;\n\t\t\tthis._quatDirtyId++;\n\t\t\tthis.cb.call(this.scope);\n\t\t}\n\t}\n\n\tget roll() {\n\t\treturn this._z;\n\t}\n\n\tset roll(value: number) {\n\t\tif (this._z !== value) {\n\t\t\tthis._z = value;\n\t\t\tthis._quatDirtyId++;\n\t\t\tthis.cb.call(this.scope);\n\t\t}\n\t}\n\n\tset(x?: number, y?: number, z?: number) {\n\t\tconst _x = x || 0;\n\t\tconst _y = y || 0;\n\t\tconst _z = z || 0;\n\t\tif (this._x !== _x || this._y !== _y || this._z !== _z) {\n\t\t\tthis._x = _x;\n\t\t\tthis._y = _y;\n\t\t\tthis._z = _z;\n\t\t\tthis._quatDirtyId++;\n\t\t\tthis.cb.call(this.scope);\n\t\t}\n\t};\n\n\tcopyFrom(euler: IEuler) {\n\t\tconst _x = euler.x;\n\t\tconst _y = euler.y;\n\t\tconst _z = euler.z;\n\t\tif (this._x !== _x || this._y !== _y || this._z !== _z) {\n\t\t\tthis._x = _x;\n\t\t\tthis._y = _y;\n\t\t\tthis._z = _z;\n\t\t\tthis._quatDirtyId++;\n\t\t\tthis.cb.call(this.scope);\n\t\t}\n\t}\n\n\tcopyTo(p: IEuler) {\n\t\tp.set(this._x, this._y, this._z);\n\t\treturn p;\n\t}\n\n\tequals(euler: IEuler) {\n\t\treturn this._x === euler.x\n\t\t\t&& this._y === euler.y\n\t\t\t&& this._z === euler.z;\n\t}\n\n\tclone() {\n\t\treturn new Euler(this._x, this._y, this._z);\n\t}\n\n\tupdate() {\n\t\tif (this._quatUpdateId === this._quatDirtyId) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._quatUpdateId = this._quatDirtyId;\n\n\t\tconst c1 = Math.cos(this._x / 2);\n\t\tconst c2 = Math.cos(this._y / 2);\n\t\tconst c3 = Math.cos(this._z / 2);\n\n\t\tconst s = this._sign;\n\t\tconst s1 = s * Math.sin(this._x / 2);\n\t\tconst s2 = s * Math.sin(this._y / 2);\n\t\tconst s3 = s * Math.sin(this._z / 2);\n\n\t\tconst q = this.quaternion;\n\n\t\tq[0] = s1 * c2 * c3 + c1 * s2 * s3;\n\t\tq[1] = c1 * s2 * c3 - s1 * c2 * s3;\n\t\tq[2] = c1 * c2 * s3 + s1 * s2 * c3;\n\t\tq[3] = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\treturn true;\n\t}\n}\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Matrix3d } from './Matrix3d';\nimport { ObservablePoint3d } from './Point3d';\nimport { ObservableEuler } from './ObservableEuler';\nimport { LinearProjection } from '../base/LinearProjection';\n\nimport type { Matrix, Transform } from '@pixi/math';\n\nconst tempMat = new Matrix3d();\n\nexport class Projection3d extends LinearProjection<Matrix3d> {\n\n\tconstructor(legacy: Transform, enable?: boolean) {\n\t\tsuper(legacy, enable);\n\t\tthis.local = new Matrix3d();\n\t\tthis.world = new Matrix3d();\n\n\t\tthis.local.cacheInverse = true;\n\t\tthis.world.cacheInverse = true;\n\n\t\tthis.position._z = 0;\n\t\tthis.scale._z = 1;\n\t\tthis.pivot._z = 0;\n\t}\n\n\tcameraMatrix: Matrix3d = null;\n\n\t_cameraMode = false;\n\n\tget cameraMode() {\n\t\treturn this._cameraMode;\n\t}\n\n\tset cameraMode(value: boolean) {\n\t\tif (this._cameraMode === value) {\n\t\t\treturn;\n\t\t}\n\t\tthis._cameraMode = value;\n\n\t\tthis.euler._sign = this._cameraMode ? -1 : 1;\n\t\tthis.euler._quatDirtyId++;\n\n\t\tif (value) {\n\t\t\tthis.cameraMatrix = new Matrix3d();\n\t\t}\n\t}\n\n\tposition = new ObservablePoint3d(this.onChange, this, 0, 0);\n\tscale = new ObservablePoint3d(this.onChange, this, 1, 1);\n\teuler = new ObservableEuler(this.onChange, this, 0, 0, 0);\n\tpivot = new ObservablePoint3d(this.onChange, this, 0, 0);\n\n\tonChange() {\n\t\tthis._projID++;\n\t}\n\n\tclear() {\n\t\tif (this.cameraMatrix) {\n\t\t\tthis.cameraMatrix.identity();\n\t\t}\n\t\tthis.position.set(0, 0, 0);\n\t\tthis.scale.set(1, 1, 1);\n\t\tthis.euler.set(0, 0, 0);\n\t\tthis.pivot.set(0, 0, 0);\n\t\tsuper.clear();\n\t}\n\n\tupdateLocalTransform(lt: Matrix) {\n\t\tif (this._projID === 0) {\n\t\t\tthis.local.copyFrom(lt);\n\t\t\treturn;\n\t\t}\n\t\tconst matrix = this.local;\n\t\tconst euler = this.euler;\n\t\tconst pos = this.position;\n\t\tconst scale = this.scale;\n\t\tconst pivot = this.pivot;\n\n\t\teuler.update();\n\n\t\tif (!this.cameraMode) {\n\t\t\tmatrix.setToRotationTranslationScale(euler.quaternion, pos._x, pos._y, pos._z, scale._x, scale._y, scale._z);\n\t\t\tmatrix.translate(-pivot._x, -pivot._y, -pivot._z);\n\t\t\tmatrix.setToMultLegacy(lt, matrix);\n\t\t\treturn;\n\t\t}\n\n\t\tmatrix.setToMultLegacy(lt, this.cameraMatrix);\n\t\tmatrix.translate(pivot._x, pivot._y, pivot._z);\n\t\tmatrix.scale(1.0 / scale._x, 1.0 / scale._y, 1.0 / scale._z);\n\t\ttempMat.setToRotationTranslationScale(euler.quaternion, 0, 0, 0, 1, 1, 1);\n\t\tmatrix.setToMult(matrix, tempMat);\n\t\tmatrix.translate(-pos._x, -pos._y, -pos._z);\n\n\t\tthis.local._dirtyId++;\n\t}\n}\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Container } from '@pixi/display';\nimport { Point } from '@pixi/math';\nimport { Projection3d } from './Projection3d';\nimport { TRANSFORM_STEP } from '../constants';\n\nimport type { DisplayObject } from '@pixi/display';\nimport type { IPoint } from '@pixi/math';\nimport type { IPoint3d } from './Point3d';\nimport type { IEuler } from './ObservableEuler';\n\nexport function container3dWorldTransform() {\n\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n}\n\nexport class Container3d extends Container {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.proj = new Projection3d(this.transform);\n\t}\n\n\tproj: Projection3d;\n\n\tisFrontFace(forceUpdate: boolean = false) {\n\t\tif (forceUpdate) {\n\t\t\tthis._recursivePostUpdateTransform();\n\t\t\tthis.displayObjectUpdateTransform();\n\t\t}\n\n\t\tconst mat = this.proj.world.mat4;\n\t\tconst dx1 = mat[0] * mat[15] - mat[3] * mat[12];\n\t\tconst dy1 = mat[1] * mat[15] - mat[3] * mat[13];\n\t\tconst dx2 = mat[4] * mat[15] - mat[7] * mat[12];\n\t\tconst dy2 = mat[5] * mat[15] - mat[7] * mat[13];\n\n\t\treturn dx1 * dy2 - dx2 * dy1 > 0;\n\t}\n\n\t/**\n\t * returns depth from 0 to 1\n\t *\n\t * @param {boolean} forceUpdate whether to force matrix updates\n\t * @returns {number} depth\n\t */\n\tgetDepth(forceUpdate: boolean = false) {\n\t\tif (forceUpdate) {\n\t\t\tthis._recursivePostUpdateTransform();\n\t\t\tthis.displayObjectUpdateTransform();\n\t\t}\n\n\t\tconst mat4 = this.proj.world.mat4;\n\t\treturn mat4[14] / mat4[15];\n\t}\n\n\ttoLocal<T extends IPoint>(position: IPoint, from?: DisplayObject,\n\t\t\tpoint?: T, skipUpdate?: boolean,\n\t\t\tstep = TRANSFORM_STEP.ALL): T {\n\n\t\tif (from)\n\t\t{\n\t\t\tposition = from.toGlobal(position, point, skipUpdate);\n\t\t}\n\n\t\tif (!skipUpdate)\n\t\t{\n\t\t\tthis._recursivePostUpdateTransform();\n\t\t}\n\n\t\tif (step === TRANSFORM_STEP.ALL) {\n\t\t\tif (!skipUpdate) {\n\t\t\t\tthis.displayObjectUpdateTransform();\n\t\t\t}\n\t\t\tif (this.proj.affine) {\n\t\t\t\treturn this.transform.worldTransform.applyInverse(position as Point, point as any) as any;\n\t\t\t}\n\t\t\treturn this.proj.world.applyInverse(position as any, point as any) as any;\n\t\t}\n\n\t\tif (this.parent) {\n\t\t\tpoint  = this.parent.worldTransform.applyInverse(position as any, point as any) as any;\n\t\t} else {\n\t\t\tpoint.copyFrom(position);\n\t\t}\n\t\tif (step === TRANSFORM_STEP.NONE) {\n\t\t\treturn point;\n\t\t}\n\n\t\tpoint = this.transform.localTransform.applyInverse(point as any, point as any) as any;\n\t\tif (step === TRANSFORM_STEP.PROJ && this.proj.cameraMode) {\n\t\t\tpoint = this.proj.cameraMatrix.applyInverse(point as any, point as any) as any;\n\t\t}\n\t\treturn point;\n\t}\n\n\tget worldTransform() {\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t}\n\n\tget position3d(): IPoint3d {\n\t\treturn this.proj.position;\n\t}\n\tget scale3d(): IPoint {\n\t\treturn this.proj.scale;\n\t}\n\tget euler(): IEuler {\n\t\treturn this.proj.euler;\n\t}\n\tget pivot3d(): IPoint {\n\t\treturn this.proj.pivot;\n\t}\n\tset position3d(value: IPoint3d) {\n\t\tthis.proj.position.copyFrom(value);\n\t}\n\tset scale3d(value: IPoint) {\n\t\tthis.proj.scale.copyFrom(value);\n\t}\n\tset euler(value: IEuler) {\n\t\tthis.proj.euler.copyFrom(value);\n\t}\n\tset pivot3d(value: IPoint) {\n\t\tthis.proj.pivot.copyFrom(value);\n\t}\n}\n\nexport let container3dToLocal = Container3d.prototype.toLocal;\nexport let container3dGetDepth = Container3d.prototype.getDepth;\nexport let container3dIsFrontFace = Container3d.prototype.isFrontFace;\n","/// <reference path=\"../types.d.ts\" />\n\nimport { Container3d } from './Container3d';\n\nexport class Camera3d extends Container3d {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.proj.cameraMode = true;\n\t\tthis.setPlanes(400, 10, 10000, false);\n\t}\n\n\t_far: number = 0;\n\t_near: number = 0;\n\t_focus: number = 0;\n\t_orthographic: boolean = false;\n\n\tget far() {\n\t\treturn this._far;\n\t}\n\n\tget near() {\n\t\treturn this._near;\n\t}\n\n\tget focus() {\n\t\treturn this._focus;\n\t}\n\n\tget ortographic() {\n\t\treturn this._orthographic;\n\t}\n\n\tsetPlanes(focus: number, near: number = 10, far: number = 10000, orthographic: boolean = false) {\n\t\tthis._focus = focus;\n\t\tthis._near = near;\n\t\tthis._far = far;\n\t\tthis._orthographic = orthographic;\n\n\t\tconst proj = this.proj;\n\t\tconst mat4 = proj.cameraMatrix.mat4;\n\n\t\tproj._projID++;\n\n\t\tmat4[10] = 1.0 / (far - near);\n\t\tmat4[14] = (focus - near) / (far - near);\n\t\tif (this._orthographic) {\n\t\t\tmat4[11] = 0;\n\t\t} else {\n\t\t\tmat4[11] = 1.0 / focus;\n\t\t}\n\t}\n}\n\n","/// <reference path=\"../../types.d.ts\" />\n\nimport { Geometry, Program, Renderer, Shader, State, Texture } from '@pixi/core';\nimport { Projection3d } from '../Projection3d';\nimport { Mesh, MeshGeometry, MeshMaterial } from '@pixi/mesh';\nimport { Mesh2d } from '../../proj2d/mesh/Mesh2d';\nimport { TRANSFORM_STEP } from '../../constants';\nimport { \n\tcontainer3dToLocal,\n\tcontainer3dGetDepth,\n\tcontainer3dIsFrontFace\n} from '../Container3d'\n\nimport type { DisplayObject } from '@pixi/display';\nimport type { Euler } from '../Euler';\nimport type { IPoint } from '@pixi/math';\n\nexport class Mesh3d2d extends Mesh {\n\tconstructor(geometry: Geometry, shader: Shader, state: State, drawMode?: number)\n\t{\n\t\tsuper(geometry, shader, state, drawMode);\n\t\tthis.proj = new Projection3d(this.transform);\n\t}\n\n\tvertexData2d: Float32Array = null;\n\tproj: Projection3d;\n\n\tcalculateVertices()\n\t{\n\t\tif (this.proj._affine) {\n\t\t\tthis.vertexData2d = null;\n\t\t\tsuper.calculateVertices();\n\t\t\treturn;\n\t\t}\n\n\t\tconst geometry = this.geometry as any;\n\t\tconst vertices = geometry.buffers[0].data;\n\t\tconst thisAny = this as any;\n\n\t\tif (geometry.vertexDirtyId === thisAny.vertexDirty && thisAny._transformID === thisAny.transform._worldID)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthisAny._transformID = thisAny.transform._worldID;\n\n\t\tif (thisAny.vertexData.length !== vertices.length)\n\t\t{\n\t\t\tthisAny.vertexData = new Float32Array(vertices.length);\n\t\t}\n\t\tif (!this.vertexData2d || this.vertexData2d.length  !== vertices.length * 3 / 2)\n\t\t{\n\t\t\tthis.vertexData2d = new Float32Array(vertices.length * 3);\n\t\t}\n\n\t\tconst wt = this.proj.world.mat4;\n\n\t\tconst vertexData2d = this.vertexData2d;\n\t\tconst vertexData = thisAny.vertexData;\n\n\t\tfor (let i = 0; i < vertexData.length / 2; i++)\n\t\t{\n\t\t\tconst x = vertices[(i * 2)];\n\t\t\tconst y = vertices[(i * 2) + 1];\n\n\t\t\tconst xx = (wt[0] * x) + (wt[4] * y) + wt[12];\n\t\t\tconst yy = (wt[1] * x) + (wt[5] * y) + wt[13];\n\t\t\tconst ww = (wt[3] * x) + (wt[7] * y) + wt[15];\n\n\t\t\tvertexData2d[i * 3] = xx;\n\t\t\tvertexData2d[i * 3 + 1] = yy;\n\t\t\tvertexData2d[i * 3 + 2] = ww;\n\n\t\t\tvertexData[(i * 2)] = xx / ww;\n\t\t\tvertexData[(i * 2) + 1] = yy / ww;\n\t\t}\n\n\t\tthisAny.vertexDirty = geometry.vertexDirtyId;\n\t}\n\n\tget worldTransform() {\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t}\n\n\ttoLocal<T extends IPoint>(position: IPoint, from?: DisplayObject,\n\t\t\t\t\t\t\t\t\tpoint?: T, skipUpdate?: boolean,\n\t\t\t\t\t\t\t\t\tstep = TRANSFORM_STEP.ALL): T {\n\t\treturn container3dToLocal.call(this, position, from, point, skipUpdate, step);\n\t}\n\n\tisFrontFace(forceUpdate?: boolean) {\n\t\treturn container3dIsFrontFace.call(this, forceUpdate);\n\t}\n\n\tgetDepth(forceUpdate?: boolean) {\n\t\treturn container3dGetDepth.call(this, forceUpdate);\n\t}\n\n\tget position3d(): IPoint {\n\t\treturn this.proj.position;\n\t}\n\tget scale3d(): IPoint {\n\t\treturn this.proj.scale;\n\t}\n\tget euler(): Euler {\n\t\treturn this.proj.euler;\n\t}\n\tget pivot3d(): IPoint {\n\t\treturn this.proj.pivot;\n\t}\n\tset position3d(value: IPoint) {\n\t\tthis.proj.position.copyFrom(value);\n\t}\n\tset scale3d(value: IPoint) {\n\t\tthis.proj.scale.copyFrom(value);\n\t}\n\tset euler(value: Euler) {\n\t\tthis.proj.euler.copyFrom(value);\n\t}\n\tset pivot3d(value: IPoint) {\n\t\tthis.proj.pivot.copyFrom(value);\n\t}\n}\n\n(Mesh3d2d.prototype as any)._renderDefault = Mesh2d.prototype._renderDefault;\n\nexport class SimpleMesh3d2d extends Mesh3d2d {\n\tconstructor(texture: Texture, vertices?: Float32Array, uvs?: Float32Array,\n\t\t\t\tindices?: Uint16Array, drawMode?: number) {\n\t\tsuper(new MeshGeometry(vertices, uvs, indices),\n\t\t\tnew MeshMaterial(texture, {\n\t\t\t\tprogram: Program.from(Mesh2d.defaultVertexShader, Mesh2d.defaultFragmentShader),\n\t\t\t\tpluginName: 'batch2d'\n\t\t\t}),\n\t\t\tnull,\n\t\t\tdrawMode);\n\n\t\t(this.geometry.getBuffer('aVertexPosition') as any).static = false;\n\t}\n\n\tautoUpdate = true;\n\n\tget vertices()\n\t{\n\t\treturn this.geometry.getBuffer('aVertexPosition').data as Float32Array;\n\t}\n\tset vertices(value)\n\t{\n\t\tthis.geometry.getBuffer('aVertexPosition').data = value;\n\t}\n\n\tprotected _render(renderer?: Renderer)\n\t{\n\t\tif (this.autoUpdate)\n\t\t{\n\t\t\tthis.geometry.getBuffer('aVertexPosition').update();\n\t\t}\n\n\t\t(super._render as any)(renderer);\n\t}\n}\n","/// <reference path=\"../../types.d.ts\" />\n\nimport { Euler } from '../Euler';\nimport { Renderer, Texture } from '@pixi/core';\nimport { Projection3d } from '../Projection3d';\nimport { Sprite } from '@pixi/sprite';\nimport { TRANSFORM_STEP } from '../../constants';\nimport {\n\tcontainer3dToLocal,\n\tcontainer3dGetDepth,\n\tcontainer3dIsFrontFace\n} from '../Container3d';\n\nimport type { DisplayObject } from '@pixi/display';\nimport type { IPoint } from '@pixi/math';\n\n/**\n * Same as Sprite2d, but\n * 1. uses Matrix3d in proj\n * 2. does not render if at least one vertex is behind camera\n */\nexport class Sprite3d extends Sprite {\n\tconstructor(texture: Texture) {\n\t\tsuper(texture);\n\t\tthis.proj = new Projection3d(this.transform);\n\t\tthis.pluginName = 'batch2d';\n\t}\n\n\tvertexData2d: Float32Array = null;\n\tproj: Projection3d;\n\tculledByFrustrum = false;\n\ttrimmedCulledByFrustrum = false;\n\n\tcalculateVertices() {\n\t\tconst texture = this._texture;\n\n\t\tif (this.proj._affine) {\n\t\t\tthis.vertexData2d = null;\n\t\t\tsuper.calculateVertices();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.vertexData2d) {\n\t\t\tthis.vertexData2d = new Float32Array(12);\n\t\t}\n\n\t\tconst wid = (this.transform as any)._worldID;\n\t\tconst tuid = (texture as any)._updateID;\n\t\tif (this._transformID === wid && this._textureID === tuid) {\n\t\t\treturn;\n\t\t}\n\t\t// update texture UV here, because base texture can be changed without calling `_onTextureUpdate`\n\t\tif (this._textureID !== tuid) {\n\t\t\t(this as any).uvs = (texture as any)._uvs.uvsFloat32;\n\t\t}\n\n\t\tthis._transformID = wid;\n\t\tthis._textureID = tuid;\n\n\t\tconst wt = this.proj.world.mat4;\n\t\tconst vertexData2d = this.vertexData2d;\n\t\tconst vertexData = this.vertexData;\n\t\tconst trim = texture.trim;\n\t\tconst orig = texture.orig;\n\t\tconst anchor = (this._anchor as any) as { _x: number, _y: number};\n\n\t\tlet w0 = 0;\n\t\tlet w1 = 0;\n\t\tlet h0 = 0;\n\t\tlet h1 = 0;\n\n\t\tif (trim) {\n\t\t\tw1 = trim.x - (anchor._x * orig.width);\n\t\t\tw0 = w1 + trim.width;\n\n\t\t\th1 = trim.y - (anchor._y * orig.height);\n\t\t\th0 = h1 + trim.height;\n\t\t} else {\n\t\t\tw1 = -anchor._x * orig.width;\n\t\t\tw0 = w1 + orig.width;\n\n\t\t\th1 = -anchor._y * orig.height;\n\t\t\th0 = h1 + orig.height;\n\t\t}\n\n\t\tlet culled = false;\n\n\t\tlet z;\n\n\t\tvertexData2d[0] = (wt[0] * w1) + (wt[4] * h1) + wt[12];\n\t\tvertexData2d[1] = (wt[1] * w1) + (wt[5] * h1) + wt[13];\n\t\tz = (wt[2] * w1) + (wt[6] * h1) + wt[14];\n\t\tvertexData2d[2] = (wt[3] * w1) + (wt[7] * h1) + wt[15];\n\t\tculled = culled || z < 0;\n\n\t\tvertexData2d[3] = (wt[0] * w0) + (wt[4] * h1) + wt[12];\n\t\tvertexData2d[4] = (wt[1] * w0) + (wt[5] * h1) + wt[13];\n\t\tz = (wt[2] * w0) + (wt[6] * h1) + wt[14];\n\t\tvertexData2d[5] = (wt[3] * w0) + (wt[7] * h1) + wt[15];\n\t\tculled = culled || z < 0;\n\n\t\tvertexData2d[6] = (wt[0] * w0) + (wt[4] * h0) + wt[12];\n\t\tvertexData2d[7] = (wt[1] * w0) + (wt[5] * h0) + wt[13];\n\t\tz = (wt[2] * w0) + (wt[6] * h0) + wt[14];\n\t\tvertexData2d[8] = (wt[3] * w0) + (wt[7] * h0) + wt[15];\n\t\tculled = culled || z < 0;\n\n\t\tvertexData2d[9] = (wt[0] * w1) + (wt[4] * h0) + wt[12];\n\t\tvertexData2d[10] = (wt[1] * w1) + (wt[5] * h0) + wt[13];\n\t\tz = (wt[2] * w1) + (wt[6] * h0) + wt[14];\n\t\tvertexData2d[11] = (wt[3] * w1) + (wt[7] * h0) + wt[15];\n\t\tculled = culled || z < 0;\n\n\t\tthis.culledByFrustrum = culled;\n\n\t\tvertexData[0] = vertexData2d[0] / vertexData2d[2];\n\t\tvertexData[1] = vertexData2d[1] / vertexData2d[2];\n\n\t\tvertexData[2] = vertexData2d[3] / vertexData2d[5];\n\t\tvertexData[3] = vertexData2d[4] / vertexData2d[5];\n\n\t\tvertexData[4] = vertexData2d[6] / vertexData2d[8];\n\t\tvertexData[5] = vertexData2d[7] / vertexData2d[8];\n\n\t\tvertexData[6] = vertexData2d[9] / vertexData2d[11];\n\t\tvertexData[7] = vertexData2d[10] / vertexData2d[11];\n\t}\n\n\tcalculateTrimmedVertices() {\n\t\tif (this.proj._affine) {\n\t\t\tsuper.calculateTrimmedVertices();\n\t\t\treturn;\n\t\t}\n\n\t\tconst wid = (this.transform as any)._worldID;\n\t\tconst tuid = (this._texture as any)._updateID;\n\t\tif (!this.vertexTrimmedData) {\n\t\t\tthis.vertexTrimmedData = new Float32Array(8);\n\t\t} else if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._transformTrimmedID = wid;\n\t\tthis._textureTrimmedID = tuid;\n\n\t\t// lets do some special trim code!\n\t\tconst texture = this._texture;\n\t\tconst vertexData = this.vertexTrimmedData;\n\t\tconst orig = texture.orig;\n\t\tconst anchor = (this._anchor as any) as { _x: number, _y: number };\n\n\t\t// lets calculate the new untrimmed bounds..\n\t\tconst wt = this.proj.world.mat4;\n\n\t\tconst w1 = -anchor._x * orig.width;\n\t\tconst w0 = w1 + orig.width;\n\n\t\tconst h1 = -anchor._y * orig.height;\n\t\tconst h0 = h1 + orig.height;\n\n\t\tlet culled = false;\n\n\t\tlet z;\n\n\t\tlet w = 1.0 / ((wt[3] * w1) + (wt[7] * h1) + wt[15]);\n\t\tvertexData[0] = w * ((wt[0] * w1) + (wt[4] * h1) + wt[12]);\n\t\tvertexData[1] = w * ((wt[1] * w1) + (wt[5] * h1) + wt[13]);\n\t\tz = (wt[2] * w1) + (wt[6] * h1) + wt[14];\n\t\tculled = culled || z < 0;\n\n\t\tw = 1.0 / ((wt[3] * w0) + (wt[7] * h1) + wt[15]);\n\t\tvertexData[2] = w * ((wt[0] * w0) + (wt[4] * h1) + wt[12]);\n\t\tvertexData[3] = w * ((wt[1] * w0) + (wt[5] * h1) + wt[13]);\n\t\tz = (wt[2] * w0) + (wt[6] * h1) + wt[14];\n\t\tculled = culled || z < 0;\n\n\t\tw = 1.0 / ((wt[3] * w0) + (wt[7] * h0) + wt[15]);\n\t\tvertexData[4] = w * ((wt[0] * w0) + (wt[4] * h0) + wt[12]);\n\t\tvertexData[5] = w * ((wt[1] * w0) + (wt[5] * h0) + wt[13]);\n\t\tz = (wt[2] * w0) + (wt[6] * h0) + wt[14];\n\t\tculled = culled || z < 0;\n\n\t\tw = 1.0 / ((wt[3] * w1) + (wt[7] * h0) + wt[15]);\n\t\tvertexData[6] = w * ((wt[0] * w1) + (wt[4] * h0) + wt[12]);\n\t\tvertexData[7] = w * ((wt[1] * w1) + (wt[5] * h0) + wt[13]);\n\t\tz = (wt[2] * w1) + (wt[6] * h0) + wt[14];\n\t\tculled = culled || z < 0;\n\n\t\tthis.culledByFrustrum = culled;\n\t}\n\n\t_calculateBounds() {\n\t\tthis.calculateVertices();\n\t\tif (this.culledByFrustrum) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst trim = this._texture.trim;\n\t\tconst orig = this._texture.orig;\n\t\tif (!trim || (trim.width === orig.width && trim.height === orig.height))\n\t\t{\n\t\t\t// no trim! lets use the usual calculations..\n\t\t\tthis._bounds.addQuad(this.vertexData);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.calculateTrimmedVertices();\n\t\tif (!this.trimmedCulledByFrustrum) {\n\t\t\tthis._bounds.addQuad(this.vertexTrimmedData as any);\n\t\t}\n\t}\n\n\t_render(renderer: Renderer) {\n\t\tthis.calculateVertices();\n\n\t\tif (this.culledByFrustrum) {\n\t\t\treturn;\n\t\t}\n\n\t\trenderer.batch.setObjectRenderer((renderer as any).plugins[this.pluginName]);\n\t\t(renderer as any).plugins[this.pluginName].render(this);\n\t}\n\n\tcontainsPoint(point: IPoint) {\n\t\tif (this.culledByFrustrum) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.containsPoint(point as any);\n\t}\n\n\tget worldTransform() {\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t}\n\n\ttoLocal<T extends IPoint>(position: IPoint, from?: DisplayObject,\n\t\t\t\t\t\t\t\t\tpoint?: T, skipUpdate?: boolean,\n\t\t\t\t\t\t\t\t\tstep = TRANSFORM_STEP.ALL): T {\n\t\treturn container3dToLocal.call(this, position, from, point, skipUpdate, step);\n\t}\n\n\tisFrontFace(forceUpdate?: boolean) {\n\t\treturn container3dIsFrontFace.call(this, forceUpdate);\n\t}\n\n\tgetDepth(forceUpdate?: boolean) {\n\t\treturn container3dGetDepth.call(this, forceUpdate);\n\t}\n\n\tget position3d(): IPoint {\n\t\treturn this.proj.position;\n\t}\n\n\tget scale3d(): IPoint {\n\t\treturn this.proj.scale;\n\t}\n\n\tget euler(): Euler {\n\t\treturn this.proj.euler;\n\t}\n\n\tget pivot3d(): IPoint {\n\t\treturn this.proj.pivot;\n\t}\n\n\tset position3d(value: IPoint) {\n\t\tthis.proj.position.copyFrom(value);\n\t}\n\n\tset scale3d(value: IPoint) {\n\t\tthis.proj.scale.copyFrom(value);\n\t}\n\n\tset euler(value: Euler) {\n\t\tthis.proj.euler.copyFrom(value);\n\t}\n\n\tset pivot3d(value: IPoint) {\n\t\tthis.proj.pivot.copyFrom(value);\n\t}\n}\n","/// <reference path=\"../../types.d.ts\" />\n\nimport { Projection3d } from '../Projection3d';\nimport { Sprite3d } from './Sprite3d';\nimport { Text } from '@pixi/text';\nimport { TRANSFORM_STEP } from '../../constants';\nimport { \n\tcontainer3dToLocal,\n\tcontainer3dIsFrontFace,\n\tcontainer3dGetDepth\n} from '../Container3d';\n\nimport type { DisplayObject } from '@pixi/display';\nimport type { IEuler } from '../ObservableEuler';\nimport type { IPoint } from '@pixi/math';\nimport type { TextStyle } from '@pixi/text';\n\nexport class Text3d extends Text {\n\tconstructor(text?: string, style?: TextStyle, canvas?: HTMLCanvasElement) {\n\t\tsuper(text, style, canvas);\n\t\tthis.proj = new Projection3d(this.transform);\n\t\tthis.pluginName = 'batch2d';\n\t}\n\n\tproj: Projection3d;\n\tvertexData2d: Float32Array = null;\n\n\tget worldTransform() {\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\n\t}\n\n\ttoLocal<T extends IPoint>(position: IPoint, from?: DisplayObject,\n\t\t\t\t\t\t\t\t\t\tpoint?: T, skipUpdate?: boolean,\n\t\t\t\t\t\t\t\t\t\tstep = TRANSFORM_STEP.ALL): T {\n\t\treturn container3dToLocal.call(this, position, from, point, skipUpdate, step);\n\t}\n\n\tisFrontFace(forceUpdate?: boolean) {\n\t\treturn container3dIsFrontFace.call(this, forceUpdate);\n\t}\n\n\tgetDepth(forceUpdate?: boolean) {\n\t\treturn container3dGetDepth.call(this, forceUpdate);\n\t}\n\n\tget position3d(): IPoint {\n\t\treturn this.proj.position;\n\t}\n\tget scale3d(): IPoint {\n\t\treturn this.proj.scale;\n\t}\n\tget euler(): IEuler {\n\t\treturn this.proj.euler;\n\t}\n\tget pivot3d(): IPoint {\n\t\treturn this.proj.pivot;\n\t}\n\tset position3d(value: IPoint) {\n\t\tthis.proj.position.copyFrom(value);\n\t}\n\tset scale3d(value: IPoint) {\n\t\tthis.proj.scale.copyFrom(value);\n\t}\n\tset euler(value: IEuler) {\n\t\tthis.proj.euler.copyFrom(value);\n\t}\n\tset pivot3d(value: IPoint) {\n\t\tthis.proj.pivot.copyFrom(value);\n\t}\n}\n\nText3d.prototype.calculateVertices = Sprite3d.prototype.calculateVertices;\n(Text3d.prototype as any).calculateTrimmedVertices = Sprite3d.prototype.calculateTrimmedVertices;\n(Text3d.prototype as any)._calculateBounds = Sprite3d.prototype._calculateBounds;\n(Text3d.prototype as any).containsPoint = Sprite3d.prototype.containsPoint;\n(Text3d.prototype as any)._render = Sprite3d.prototype._render;\n","/// <reference path=\"../../types.d.ts\" />\n\nimport { Container3d, container3dWorldTransform } from '../Container3d';\nimport { Mesh3d2d } from '../mesh/Mesh3d2d';\nimport { Mesh2d } from '../../proj2d/mesh/Mesh2d';\nimport { Program } from '@pixi/core';\nimport { Projection3d } from '../Projection3d';\nimport { Sprite3d } from './Sprite3d';\nimport { MeshMaterial } from '@pixi/mesh';\nimport { SimpleMesh, SimpleRope } from '@pixi/mesh-extras';\n\nconst containerProps: any = {\n\tworldTransform: {\n\t\tget: container3dWorldTransform,\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t},\n\tposition3d: {\n\t\tget: function() { return this.proj.position },\n\t\tset: function(value: any) { this.proj.position.copy(value) }\n\t},\n\tscale3d: {\n\t\tget: function() { return this.proj.scale },\n\t\tset: function(value: any) { this.proj.scale.copy(value) }\n\t},\n\tpivot3d: {\n\t\tget: function() { return this.proj.pivot },\n\t\tset: function(value: any) { this.proj.pivot.copy(value) }\n\t},\n\teuler: {\n\t\tget: function() { return this.proj.euler },\n\t\tset: function(value: any) { this.proj.euler.copy(value) }\n\t}\n};\n\nfunction convertTo3d() {\n\tif (this.proj) return;\n\tthis.proj = new Projection3d(this.transform);\n\tthis.toLocal = Container3d.prototype.toLocal;\n\tthis.isFrontFace = Container3d.prototype.isFrontFace;\n\tthis.getDepth = Container3d.prototype.getDepth;\n\tObject.defineProperties(this, containerProps);\n}\n\n(PIXI as any).Container.prototype.convertTo3d = convertTo3d;\n\n(PIXI as any).Sprite.prototype.convertTo3d = function () {\n\tif (this.proj) return;\n\tthis.calculateVertices = Sprite3d.prototype.calculateVertices;\n\tthis.calculateTrimmedVertices = Sprite3d.prototype.calculateTrimmedVertices;\n\tthis._calculateBounds = Sprite3d.prototype._calculateBounds;\n\tthis.containsPoint = Sprite3d.prototype.containsPoint;\n\tthis.pluginName = 'batch2d';\n\tconvertTo3d.call(this);\n};\n\n(PIXI as any).Container.prototype.convertSubtreeTo3d = function () {\n\tthis.convertTo3d();\n\tfor (let i = 0; i < this.children.length; i++) {\n\t\tthis.children[i].convertSubtreeTo3d();\n\t}\n};\n\nif (SimpleMesh) {\n\tSimpleMesh.prototype.convertTo3d =\n\t\tSimpleRope.prototype.convertTo3d =\n\t\t\tfunction () {\n\t\t\t\tif (this.proj) return;\n\t\t\t\tthis.calculateVertices = Mesh3d2d.prototype.calculateVertices;\n\t\t\t\tthis._renderDefault = (Mesh3d2d.prototype as any)._renderDefault;\n\t\t\t\tif (this.material.pluginName !== 'batch2d') {\n\t\t\t\t\tthis.material = new MeshMaterial(this.material.texture, {\n\t\t\t\t\t\tprogram: Program.from(Mesh2d.defaultVertexShader, Mesh2d.defaultFragmentShader),\n\t\t\t\t\t\tpluginName: 'batch2d'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconvertTo3d.call(this);\n\t\t\t};\n}\n"],"names":["Transform","AFFINE","TRANSFORM_STEP","Buffer","TYPES","Geometry","BatchShaderGenerator","premultiplyTint","AbstractBatchRenderer","Renderer","premultiplyBlendMode","Point","Matrix","Rectangle","transformHack","Container","TextureMatrix","Sprite","Text","tempRect","tempMat","ObservablePoint","shaderVert","shaderFrag","Mesh","MeshGeometry","MeshMaterial","Program","TilingSprite","Filter","SimpleMesh","SimpleRope","QuadUv","Shader","WRAP_MODES","utils.premultiplyTintToRgba","utils.correctBlendMode","DRAW_MODES","ObjectRenderer","systems"],"mappings":"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,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YAEpD,OAAO,GAAG,CAAC;SACX;QAEM,6BAAoB,GAA3B,UAA4B,GAAiB,EAAE,CAAe,EAAE,CAAe;YAC9E,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACrD,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAGvD,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEnD,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEnD,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACX,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACX,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEpD,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACX,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACX,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACX,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACX,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,OAAO,GAAG,CAAC;SACX;QAroBe,iBAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAQ1B,oBAAW,GAAG,IAAI,QAAQ,EAAE,CAAC;QA8nB9C,eAAC;KA7oBD;;;QCHC,eAAY,CAAU,EAAE,CAAU,EAAE,CAAU;YAyB9C,kBAAa,GAAG,CAAC,CAAC,CAAC;YACnB,iBAAY,GAAG,CAAC,CAAC;YAOjB,UAAK,GAAW,CAAC,CAAC;YA5BjB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAMjB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAMjB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAEjB,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAEvB,IAAI,CAAC,MAAM,EAAE,CAAC;SACd;QAYD,sBAAI,oBAAC;iBAAL;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAM,KAAa;gBAClB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACpB;aACD;;;WAPA;QASD,sBAAI,oBAAC;iBAAL;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAM,KAAa;gBAClB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACpB;aACD;;;WAPA;QASD,sBAAI,oBAAC;iBAAL;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAM,KAAa;gBAClB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACpB;aACD;;;WAPA;QASD,sBAAI,wBAAK;iBAAT;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAU,KAAa;gBACtB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACpB;aACD;;;WAPA;QASD,sBAAI,sBAAG;iBAAP;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAQ,KAAa;gBACpB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACpB;aACD;;;WAPA;QASD,sBAAI,uBAAI;iBAAR;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAS,KAAa;gBACrB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACpB;aACD;;;WAPA;QASD,mBAAG,GAAH,UAAI,CAAU,EAAE,CAAU,EAAE,CAAU;YACrC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBACvD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,YAAY,EAAE,CAAC;aACpB;SACD;QAAA,CAAC;QAEF,wBAAQ,GAAR,UAAS,KAAa;YACrB,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YACnB,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YACnB,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YACnB,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBACvD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,YAAY,EAAE,CAAC;aACpB;SACD;QAED,sBAAM,GAAN,UAAO,CAAS;YACf,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YACjC,OAAO,CAAC,CAAC;SACT;QAED,sBAAM,GAAN,UAAO,KAAa;YACnB,OAAO,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC;mBACtB,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC;mBACnB,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;SACxB;QAED,qBAAK,GAAL;YACC,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAC5C;QAED,sBAAM,GAAN;YACC,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,EAAE;gBAC7C,OAAO,KAAK,CAAC;aACb;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;YAEvC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACjC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACjC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAEjC,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,IAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACrC,IAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACrC,IAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAErC,IAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;YAE1B,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACnC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACnC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACnC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAEnC,OAAO,IAAI,CAAC;SACZ;QACF,YAAC;IAAD,CAAC;;;QClKA,yBAAmB,EAAO,EAAS,KAAU,EAAE,CAAU,EAAE,CAAU,EAAE,CAAU;YAA9D,OAAE,GAAF,EAAE,CAAK;YAAS,UAAK,GAAL,KAAK,CAAK;YAyB7C,kBAAa,GAAG,CAAC,CAAC,CAAC;YACnB,iBAAY,GAAG,CAAC,CAAC;YAOjB,UAAK,GAAW,CAAC,CAAC;YA5BjB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAMjB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAMjB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAEjB,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAEvB,IAAI,CAAC,MAAM,EAAE,CAAC;SACd;QAYD,sBAAI,8BAAC;iBAAL;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAM,KAAa;gBAClB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACzB;aACD;;;WARA;QAUD,sBAAI,8BAAC;iBAAL;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAM,KAAa;gBAClB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACzB;aACD;;;WARA;QAUD,sBAAI,8BAAC;iBAAL;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAM,KAAa;gBAClB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACzB;aACD;;;WARA;QAUD,sBAAI,kCAAK;iBAAT;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAU,KAAa;gBACtB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACzB;aACD;;;WARA;QAUD,sBAAI,gCAAG;iBAAP;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAQ,KAAa;gBACpB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACzB;aACD;;;WARA;QAUD,sBAAI,iCAAI;iBAAR;gBACC,OAAO,IAAI,CAAC,EAAE,CAAC;aACf;iBAED,UAAS,KAAa;gBACrB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACzB;aACD;;;WARA;QAUD,6BAAG,GAAH,UAAI,CAAU,EAAE,CAAU,EAAE,CAAU;YACrC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBACvD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACzB;SACD;QAAA,CAAC;QAEF,kCAAQ,GAAR,UAAS,KAAa;YACrB,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YACnB,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YACnB,IAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YACnB,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBACvD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACzB;SACD;QAED,gCAAM,GAAN,UAAO,CAAS;YACf,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YACjC,OAAO,CAAC,CAAC;SACT;QAED,gCAAM,GAAN,UAAO,KAAa;YACnB,OAAO,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC;mBACtB,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC;mBACnB,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;SACxB;QAED,+BAAK,GAAL;YACC,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAC5C;QAED,gCAAM,GAAN;YACC,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,EAAE;gBAC7C,OAAO,KAAK,CAAC;aACb;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;YAEvC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACjC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACjC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAEjC,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,IAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACrC,IAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACrC,IAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAErC,IAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;YAE1B,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACnC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACnC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACnC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAEnC,OAAO,IAAI,CAAC;SACZ;QACF,sBAAC;IAAD,CAAC;;ICjLD,IAAMmB,SAAO,GAAG,IAAI,QAAQ,EAAE,CAAC;;QAEG,gCAA0B;QAE3D,sBAAY,MAAiB,EAAE,MAAgB;YAA/C,YACC,kBAAM,MAAM,EAAE,MAAM,CAAC,SAUrB;YAED,kBAAY,GAAa,IAAI,CAAC;YAE9B,iBAAW,GAAG,KAAK,CAAC;YAoBpB,cAAQ,GAAG,IAAI,iBAAiB,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,WAAK,GAAG,IAAI,iBAAiB,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzD,WAAK,GAAG,IAAI,eAAe,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1D,WAAK,GAAG,IAAI,iBAAiB,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YApCxD,KAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;YAC5B,KAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;YAE5B,KAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;YAC/B,KAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;YAE/B,KAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC;YACrB,KAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;YAClB,KAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;;SAClB;QAMD,sBAAI,oCAAU;iBAAd;gBACC,OAAO,IAAI,CAAC,WAAW,CAAC;aACxB;iBAED,UAAe,KAAc;gBAC5B,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;oBAC/B,OAAO;iBACP;gBACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAEzB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC7C,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;gBAE1B,IAAI,KAAK,EAAE;oBACV,IAAI,CAAC,YAAY,GAAG,IAAI,QAAQ,EAAE,CAAC;iBACnC;aACD;;;WAdA;QAqBD,+BAAQ,GAAR;YACC,IAAI,CAAC,OAAO,EAAE,CAAC;SACf;QAED,4BAAK,GAAL;YACC,IAAI,IAAI,CAAC,YAAY,EAAE;gBACtB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;aAC7B;YACD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACxB,iBAAM,KAAK,WAAE,CAAC;SACd;QAED,2CAAoB,GAApB,UAAqB,EAAU;YAC9B,IAAI,IAAI,CAAC,OAAO,KAAK,CAAC,EAAE;gBACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACxB,OAAO;aACP;YACD,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;YAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAEzB,KAAK,CAAC,MAAM,EAAE,CAAC;YAEf,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACrB,MAAM,CAAC,6BAA6B,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;gBAC7G,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAClD,MAAM,CAAC,eAAe,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;gBACnC,OAAO;aACP;YAED,MAAM,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YAC9C,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;YAC7DA,SAAO,CAAC,6BAA6B,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1E,MAAM,CAAC,SAAS,CAAC,MAAM,EAAEA,SAAO,CAAC,CAAC;YAClC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAE5C,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;SACtB;QACF,mBAAC;IAAD,CAtFA,CAAkC,gBAAgB;;aCClC,yBAAyB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAY,CAAC;IAClF,CAAC;;QAEgC,+BAAS;QACzC;YAAA,YACC,iBAAO,SAEP;YADA,KAAI,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;;SAC7C;QAID,iCAAW,GAAX,UAAY,WAA4B;YAA5B,4BAAA,EAAA,mBAA4B;YACvC,IAAI,WAAW,EAAE;gBAChB,IAAI,CAAC,6BAA6B,EAAE,CAAC;gBACrC,IAAI,CAAC,4BAA4B,EAAE,CAAC;aACpC;YAED,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACjC,IAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAChD,IAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAChD,IAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAChD,IAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAEhD,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;SACjC;QAQD,8BAAQ,GAAR,UAAS,WAA4B;YAA5B,4BAAA,EAAA,mBAA4B;YACpC,IAAI,WAAW,EAAE;gBAChB,IAAI,CAAC,6BAA6B,EAAE,CAAC;gBACrC,IAAI,CAAC,4BAA4B,EAAE,CAAC;aACpC;YAED,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YAClC,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;SAC3B;QAED,6BAAO,GAAP,UAA0B,QAAgB,EAAE,IAAoB,EAC9D,KAAS,EAAE,UAAoB,EAC/B,IAAyB;YAAzB,qBAAA,EAAA,OAAOlB,sBAAc,CAAC,GAAG;YAE1B,IAAI,IAAI,EACR;gBACC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;aACtD;YAED,IAAI,CAAC,UAAU,EACf;gBACC,IAAI,CAAC,6BAA6B,EAAE,CAAC;aACrC;YAED,IAAI,IAAI,KAAKA,sBAAc,CAAC,GAAG,EAAE;gBAChC,IAAI,CAAC,UAAU,EAAE;oBAChB,IAAI,CAAC,4BAA4B,EAAE,CAAC;iBACpC;gBACD,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACrB,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,YAAY,CAAC,QAAiB,EAAE,KAAY,CAAQ,CAAC;iBAC1F;gBACD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAe,EAAE,KAAY,CAAQ,CAAC;aAC1E;YAED,IAAI,IAAI,CAAC,MAAM,EAAE;gBAChB,KAAK,GAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,QAAe,EAAE,KAAY,CAAQ,CAAC;aACvF;iBAAM;gBACN,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACzB;YACD,IAAI,IAAI,KAAKA,sBAAc,CAAC,IAAI,EAAE;gBACjC,OAAO,KAAK,CAAC;aACb;YAED,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,YAAY,CAAC,KAAY,EAAE,KAAY,CAAQ,CAAC;YACtF,IAAI,IAAI,KAAKA,sBAAc,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACzD,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAY,EAAE,KAAY,CAAQ,CAAC;aAC/E;YACD,OAAO,KAAK,CAAC;SACb;QAED,sBAAI,uCAAc;iBAAlB;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAY,CAAC;aACjF;;;WAAA;QAED,sBAAI,mCAAU;iBAAd;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC1B;iBAUD,UAAe,KAAe;gBAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACnC;;;WAZA;QACD,sBAAI,gCAAO;iBAAX;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAUD,UAAY,KAAa;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAZA;QACD,sBAAI,8BAAK;iBAAT;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAUD,UAAU,KAAa;gBACtB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAZA;QACD,sBAAI,gCAAO;iBAAX;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAUD,UAAY,KAAa;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAZA;QAaF,kBAAC;IAAD,CA3GA,CAAiCa,iBAAS,GA2GzC;QAEU,kBAAkB,GAAG,WAAW,CAAC,SAAS,CAAC,QAAQ;QACnD,mBAAmB,GAAG,WAAW,CAAC,SAAS,CAAC,SAAS;QACrD,sBAAsB,GAAG,WAAW,CAAC,SAAS,CAAC;;;QC3H5B,4BAAW;QACxC;YAAA,YACC,iBAAO,SAGP;YAED,UAAI,GAAW,CAAC,CAAC;YACjB,WAAK,GAAW,CAAC,CAAC;YAClB,YAAM,GAAW,CAAC,CAAC;YACnB,mBAAa,GAAY,KAAK,CAAC;YAP9B,KAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAC5B,KAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;;SACtC;QAOD,sBAAI,yBAAG;iBAAP;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC;aACjB;;;WAAA;QAED,sBAAI,0BAAI;iBAAR;gBACC,OAAO,IAAI,CAAC,KAAK,CAAC;aAClB;;;WAAA;QAED,sBAAI,2BAAK;iBAAT;gBACC,OAAO,IAAI,CAAC,MAAM,CAAC;aACnB;;;WAAA;QAED,sBAAI,iCAAW;iBAAf;gBACC,OAAO,IAAI,CAAC,aAAa,CAAC;aAC1B;;;WAAA;QAED,4BAAS,GAAT,UAAU,KAAa,EAAE,IAAiB,EAAE,GAAmB,EAAE,YAA6B;YAArE,qBAAA,EAAA,SAAiB;YAAE,oBAAA,EAAA,WAAmB;YAAE,6BAAA,EAAA,oBAA6B;YAC7F,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAElC,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAEpC,IAAI,CAAC,OAAO,EAAE,CAAC;YAEf,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC;YAC9B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aACb;iBAAM;gBACN,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC;aACvB;SACD;QACF,eAAC;IAAD,CA/CA,CAA8B,WAAW;;;QCaX,4BAAI;QACjC,kBAAY,QAAkB,EAAE,MAAc,EAAE,KAAY,EAAE,QAAiB;YAA/E,YAEC,kBAAM,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,SAExC;YAED,kBAAY,GAAiB,IAAI,CAAC;YAHjC,KAAI,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;;SAC7C;QAKD,oCAAiB,GAAjB;YAEC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,iBAAM,iBAAiB,WAAE,CAAC;gBAC1B,OAAO;aACP;YAED,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAe,CAAC;YACtC,IAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC1C,IAAM,OAAO,GAAG,IAAW,CAAC;YAE5B,IAAI,QAAQ,CAAC,aAAa,KAAK,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,YAAY,KAAK,OAAO,CAAC,SAAS,CAAC,QAAQ,EACzG;gBACC,OAAO;aACP;YAED,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;YAElD,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,EACjD;gBACC,OAAO,CAAC,UAAU,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aACvD;YACD,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAM,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,EAC/E;gBACC,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC1D;YAED,IAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YAEhC,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;YAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAC9C;gBACC,IAAM,CAAC,GAAG,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC5B,IAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBAEhC,IAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC9C,IAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC9C,IAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;gBAE9C,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBACzB,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBAC7B,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;gBAE7B,UAAU,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBAC9B,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;aAClC;YAED,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC;SAC7C;QAED,sBAAI,oCAAc;iBAAlB;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAY,CAAC;aACjF;;;WAAA;QAED,0BAAO,GAAP,UAA0B,QAAgB,EAAE,IAAoB,EACxD,KAAS,EAAE,UAAoB,EAC/B,IAAyB;YAAzB,qBAAA,EAAA,OAAOb,sBAAc,CAAC,GAAG;YAChC,OAAO,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;SAC9E;QAED,8BAAW,GAAX,UAAY,WAAqB;YAChC,OAAO,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;SACtD;QAED,2BAAQ,GAAR,UAAS,WAAqB;YAC7B,OAAO,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;SACnD;QAED,sBAAI,gCAAU;iBAAd;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC1B;iBAUD,UAAe,KAAa;gBAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACnC;;;WAZA;QACD,sBAAI,6BAAO;iBAAX;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAUD,UAAY,KAAa;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAZA;QACD,sBAAI,2BAAK;iBAAT;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAUD,UAAU,KAAY;gBACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAZA;QACD,sBAAI,6BAAO;iBAAX;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAUD,UAAY,KAAa;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAZA;QAaF,eAAC;IAAD,CAzGA,CAA8BsB,SAAI,GAyGjC;IAEA,QAAQ,CAAC,SAAiB,CAAC,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;;QAEzC,kCAAQ;QAC3C,wBAAY,OAAgB,EAAE,QAAuB,EAAE,GAAkB,EACtE,OAAqB,EAAE,QAAiB;YAD3C,YAEC,kBAAM,IAAIC,iBAAY,CAAC,QAAQ,EAAE,GAAG,EAAE,OAAO,CAAC,EAC7C,IAAIC,iBAAY,CAAC,OAAO,EAAE;gBACzB,OAAO,EAAEC,YAAO,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,qBAAqB,CAAC;gBAC/E,UAAU,EAAE,SAAS;aACrB,CAAC,EACF,IAAI,EACJ,QAAQ,CAAC,SAGV;YAED,gBAAU,GAAG,IAAI,CAAC;YAHhB,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAS,CAAC,MAAM,GAAG,KAAK,CAAC;;SACnE;QAID,sBAAI,oCAAQ;iBAAZ;gBAEC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,IAAoB,CAAC;aACvE;iBACD,UAAa,KAAK;gBAEjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC;aACxD;;;WAJA;QAMS,gCAAO,GAAjB,UAAkB,QAAmB;YAEpC,IAAI,IAAI,CAAC,UAAU,EACnB;gBACC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;aACpD;YAEA,iBAAM,OAAO,YAAS,QAAQ,CAAC,CAAC;SACjC;QACF,qBAAC;IAAD,CAlCA,CAAoC,QAAQ;;;QCzGd,4BAAM;QACnC,kBAAY,OAAgB;YAA5B,YACC,kBAAM,OAAO,CAAC,SAGd;YAED,kBAAY,GAAiB,IAAI,CAAC;YAElC,sBAAgB,GAAG,KAAK,CAAC;YACzB,6BAAuB,GAAG,KAAK,CAAC;YAP/B,KAAI,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YAC7C,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;SAC5B;QAOD,oCAAiB,GAAjB;YACC,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;YAE9B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,iBAAM,iBAAiB,WAAE,CAAC;gBAC1B,OAAO;aACP;YACD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACvB,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;aACzC;YAED,IAAM,GAAG,GAAI,IAAI,CAAC,SAAiB,CAAC,QAAQ,CAAC;YAC7C,IAAM,IAAI,GAAI,OAAe,CAAC,SAAS,CAAC;YACxC,IAAI,IAAI,CAAC,YAAY,KAAK,GAAG,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC1D,OAAO;aACP;YAED,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC5B,IAAY,CAAC,GAAG,GAAI,OAAe,CAAC,IAAI,CAAC,UAAU,CAAC;aACrD;YAED,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YAChC,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YACnC,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YAC1B,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YAC1B,IAAM,MAAM,GAAI,IAAI,CAAC,OAA4C,CAAC;YAElE,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,IAAI,EAAE,GAAG,CAAC,CAAC;YAEX,IAAI,IAAI,EAAE;gBACT,EAAE,GAAG,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;gBAErB,EAAE,GAAG,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACxC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;aACtB;iBAAM;gBACN,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC7B,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;gBAErB,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC9B,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;aACtB;YAED,IAAI,MAAM,GAAG,KAAK,CAAC;YAEnB,IAAI,CAAC,CAAC;YAEN,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzB,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzB,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzB,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACxD,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACxD,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;YAE/B,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAClD,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAElD,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAClD,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAElD,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAClD,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAElD,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC;YACnD,UAAU,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC;SACpD;QAED,2CAAwB,GAAxB;YACC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACtB,iBAAM,wBAAwB,WAAE,CAAC;gBACjC,OAAO;aACP;YAED,IAAM,GAAG,GAAI,IAAI,CAAC,SAAiB,CAAC,QAAQ,CAAC;YAC7C,IAAM,IAAI,GAAI,IAAI,CAAC,QAAgB,CAAC,SAAS,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;aAC7C;iBAAM,IAAI,IAAI,CAAC,mBAAmB,KAAK,GAAG,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;gBAC/E,OAAO;aACP;YAED,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;YAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAG9B,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAC1C,IAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YAC1B,IAAM,MAAM,GAAI,IAAI,CAAC,OAA6C,CAAC;YAGnE,IAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YAEhC,IAAM,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YACnC,IAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAE3B,IAAM,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;YACpC,IAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;YAE5B,IAAI,MAAM,GAAG,KAAK,CAAC;YAEnB,IAAI,CAAC,CAAC;YAEN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzB,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzB,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzB,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjD,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;SAC/B;QAED,mCAAgB,GAAhB;YACC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAC1B,OAAO;aACP;YAED,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAChC,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,EACvE;gBAEC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACtC,OAAO;aACP;YAED,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE;gBAClC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAwB,CAAC,CAAC;aACpD;SACD;QAED,0BAAO,GAAP,UAAQ,QAAkB;YACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAC1B,OAAO;aACP;YAED,QAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAE,QAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC5E,QAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACxD;QAED,gCAAa,GAAb,UAAc,KAAa;YAC1B,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAC1B,OAAO,KAAK,CAAC;aACb;YAED,OAAO,iBAAM,aAAa,YAAC,KAAY,CAAC,CAAC;SACzC;QAED,sBAAI,oCAAc;iBAAlB;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAY,CAAC;aACjF;;;WAAA;QAED,0BAAO,GAAP,UAA0B,QAAgB,EAAE,IAAoB,EACxD,KAAS,EAAE,UAAoB,EAC/B,IAAyB;YAAzB,qBAAA,EAAA,OAAOzB,sBAAc,CAAC,GAAG;YAChC,OAAO,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;SAC9E;QAED,8BAAW,GAAX,UAAY,WAAqB;YAChC,OAAO,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;SACtD;QAED,2BAAQ,GAAR,UAAS,WAAqB;YAC7B,OAAO,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;SACnD;QAED,sBAAI,gCAAU;iBAAd;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC1B;iBAcD,UAAe,KAAa;gBAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACnC;;;WAhBA;QAED,sBAAI,6BAAO;iBAAX;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAcD,UAAY,KAAa;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAhBA;QAED,sBAAI,2BAAK;iBAAT;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAcD,UAAU,KAAY;gBACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAhBA;QAED,sBAAI,6BAAO;iBAAX;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAcD,UAAY,KAAa;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAhBA;QAiBF,eAAC;IAAD,CAlQA,CAA8Be,aAAM;;;QCJR,0BAAI;QAC/B,gBAAY,IAAa,EAAE,KAAiB,EAAE,MAA0B;YAAxE,YACC,kBAAM,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,SAG1B;YAGD,kBAAY,GAAiB,IAAI,CAAC;YALjC,KAAI,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YAC7C,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;SAC5B;QAKD,sBAAI,kCAAc;iBAAlB;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAY,CAAC;aACjF;;;WAAA;QAED,wBAAO,GAAP,UAA0B,QAAgB,EAAE,IAAoB,EACvD,KAAS,EAAE,UAAoB,EAC/B,IAAyB;YAAzB,qBAAA,EAAA,OAAOf,sBAAc,CAAC,GAAG;YACjC,OAAO,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;SAC9E;QAED,4BAAW,GAAX,UAAY,WAAqB;YAChC,OAAO,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;SACtD;QAED,yBAAQ,GAAR,UAAS,WAAqB;YAC7B,OAAO,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;SACnD;QAED,sBAAI,8BAAU;iBAAd;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC1B;iBAUD,UAAe,KAAa;gBAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACnC;;;WAZA;QACD,sBAAI,2BAAO;iBAAX;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAUD,UAAY,KAAa;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAZA;QACD,sBAAI,yBAAK;iBAAT;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAUD,UAAU,KAAa;gBACtB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAZA;QACD,sBAAI,2BAAO;iBAAX;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aACvB;iBAUD,UAAY,KAAa;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAChC;;;WAZA;QAaF,aAAC;IAAD,CApDA,CAA4BgB,SAAI,GAoD/B;IAED,MAAM,CAAC,SAAS,CAAC,iBAAiB,GAAG,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC;IACzE,MAAM,CAAC,SAAiB,CAAC,wBAAwB,GAAG,QAAQ,CAAC,SAAS,CAAC,wBAAwB,CAAC;IAChG,MAAM,CAAC,SAAiB,CAAC,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAChF,MAAM,CAAC,SAAiB,CAAC,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC;IAC1E,MAAM,CAAC,SAAiB,CAAC,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,OAAO;;IChE9D,IAAM,cAAc,GAAQ;QAC3B,cAAc,EAAE;YACf,GAAG,EAAE,yBAAyB;YAC9B,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,IAAI;SAClB;QACD,UAAU,EAAE;YACX,GAAG,EAAE,cAAa,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAA,EAAE;YAC7C,GAAG,EAAE,UAAS,KAAU,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAE;SAC5D;QACD,OAAO,EAAE;YACR,GAAG,EAAE,cAAa,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAA,EAAE;YAC1C,GAAG,EAAE,UAAS,KAAU,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAE;SACzD;QACD,OAAO,EAAE;YACR,GAAG,EAAE,cAAa,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAA,EAAE;YAC1C,GAAG,EAAE,UAAS,KAAU,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAE;SACzD;QACD,KAAK,EAAE;YACN,GAAG,EAAE,cAAa,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAA,EAAE;YAC1C,GAAG,EAAE,UAAS,KAAU,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAE;SACzD;KACD,CAAC;IAEF,SAAS,WAAW;QACnB,IAAI,IAAI,CAAC,IAAI;YAAE,OAAO;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC;QACrD,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC/C,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAC/C,CAAC;IAEA,IAAY,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;IAE3D,IAAY,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG;QAC5C,IAAI,IAAI,CAAC,IAAI;YAAE,OAAO;QACtB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC;QAC9D,IAAI,CAAC,wBAAwB,GAAG,QAAQ,CAAC,SAAS,CAAC,wBAAwB,CAAC;QAC5E,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC;QAC5D,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC;QACtD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC;IAED,IAAY,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,GAAG;QACtD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC;SACtC;IACF,CAAC,CAAC;IAEF,IAAIY,qBAAU,EAAE;QACfA,qBAAU,CAAC,SAAS,CAAC,WAAW;YAC/BC,qBAAU,CAAC,SAAS,CAAC,WAAW;gBAC/B;oBACC,IAAI,IAAI,CAAC,IAAI;wBAAE,OAAO;oBACtB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC;oBAC9D,IAAI,CAAC,cAAc,GAAI,QAAQ,CAAC,SAAiB,CAAC,cAAc,CAAC;oBACjE,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,SAAS,EAAE;wBAC3C,IAAI,CAAC,QAAQ,GAAG,IAAIL,iBAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;4BACvD,OAAO,EAAEC,YAAO,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,qBAAqB,CAAC;4BAC/E,UAAU,EAAE,SAAS;yBACrB,CAAC,CAAC;qBACH;oBACD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}